{"version":3,"sources":["js/jq.schedule.js"],"names":["$","$element","element","setting","scheduleData","timelineData","currentNode","tableStartTime","tableEndTime","methods","calcStringTime","string","slice","split","Number","formatTime","min","i","data","schedule","d","timeline","push","resetData","find","remove","_resizeRow","apply","this","addSchedule","start","end","text","_addScheduleData","_resetBarPosition","_getTimeLineNumber","top","num","n","tn","Math","ceil","timeLineY","timeLinePaddingTop","timeLinePaddingBottom","rows","r","tr","length","max","_addScheduleBgData","st","widthTime","et","floor","$bar","css","left","widthTimeX","width","height","eq","class","addClass","append","stext","etext","snum","_getScheduleCount","onAppendSchedule","key","bind","onClick","node","scKey","$node","draggable","grid","containment","helper","event","ui","offsetTop","position","offsetLeft","currentTop","currentLeft","nowTimeline","drag","$moveNode","timelineNum","_rewriteBarText","stop","x","onChange","resizable","handles","minWidth","w","_addRow","row","html","title","id","$data","onInitRow","$timeline","t","$tl","timeBorder","click","onScheduleClick","on","bdata","s","e","droppable","accept","drop","ev","nowTimelineNum","index","appendTo","onAppendRow","each","$e1","$e2","c1","c2","s1","s2","e1","$barList","codes","check","h","code","sort","a","b","next","j","timeLineBorder","closest","_resizeWindow","scMainWidth","dataWidth","cellNum","_moveSchedules","baseTimeLineCell","moveWidth","v1","v2","init","options","extend","className","startTime","endTime","headTimeBorder","verticalScrollbar","bundleMoveWidth","scroll","scrollTop","scrollLeft","beforeTime","$time","cn","window","resize","trigger","fn","timeSchedule","method","Array","prototype","call","arguments","error","jQuery"],"mappings":"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","file":"jq.schedule.min.js","sourcesContent":["(function ($) {\n    'use strict';\n\n    var setting = null;\n    var scheduleData = [];\n    var timelineData = [];\n    var $element, element;\n    var currentNode = null;\n    var tableStartTime = 0;\n    var tableEndTime = 0;\n\n    var methods = {\n        /**\n         *\n         * @param {string} string\n         * @returns {number}\n         */\n        calcStringTime: function (string) {\n            var slice = string.split(':');\n            var h = Number(slice[0]) * 60 * 60;\n            var i = Number(slice[1]) * 60;\n            var min = h + i;\n            return min;\n        },\n        /**\n         *\n         * @param {number} min\n         * @returns {string}\n         */\n        formatTime: function (min) {\n            var h = '' + (min / 36000 | 0) + (min / 3600 % 10 | 0);\n            var i = '' + (min % 3600 / 600 | 0) + (min % 3600 / 60 % 10 | 0);\n            return h + ':' + i;\n        },\n\n        /**\n         * get scheduleData\n         * @returns {any[]}\n         */\n        scheduleData: function () {\n            return scheduleData;\n        },\n        /**\n         * get timelineData\n         * @returns {any[]}\n         */\n        timelineData: function () {\n            var data = [];\n            var i;\n            for (i in timelineData) {\n                data[i] = timelineData[i];\n                data[i].schedule = [];\n            }\n            for (i in scheduleData) {\n                var d = scheduleData[i];\n                if (typeof d.timeline === 'undefined') {\n                    continue;\n                }\n                if (typeof data[d.timeline] === 'undefined') {\n                    continue;\n                }\n                data[d.timeline].schedule.push(d);\n            }\n            return data;\n        },\n        /**\n         * reset data\n         */\n        resetData: function () {\n            scheduleData = [];\n            $element.find('.sc_bar').remove();\n            for (var i in timelineData) {\n                timelineData[i].schedule = [];\n                methods._resizeRow.apply(this, [i, 0]);\n            }\n            return this;\n        },\n        /**\n         * add schedule data\n         *\n         * @param {number} timeline\n         * @param {object} data\n         * @returns {methods}\n         */\n        addSchedule: function (timeline, data) {\n            var d = {\n                start: methods.calcStringTime(data.start),\n                end: methods.calcStringTime(data.end),\n                text: data.text,\n                timeline: timeline\n            };\n            if (data.data) {\n                d.data = data.data;\n            }\n            methods._addScheduleData.apply(this, [timeline, d]);\n            methods._resetBarPosition.apply(this, [timeline]);\n            return this;\n        },\n        /**\n         * 現在のタイムライン番号を取得\n         *\n         * @param top\n         * @returns {number}\n         */\n        _getTimeLineNumber: function (top) {\n            var num = 0;\n            var n = 0;\n            var tn = Math.ceil(top / (setting.timeLineY + setting.timeLinePaddingTop + setting.timeLinePaddingBottom));\n            for (var i in setting.rows) {\n                var r = setting.rows[i];\n                var tr = 0;\n                if (typeof r.schedule === 'object') {\n                    tr = r.schedule.length;\n                }\n                if (currentNode && currentNode.timeline) {\n                    tr++;\n                }\n                n += Math.max(tr, 1);\n                if (n >= tn) {\n                    break;\n                }\n                num++;\n            }\n            return num;\n        },\n        /**\n         * 背景データ追加\n         *\n         * @param data\n         */\n        _addScheduleBgData: function (data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = $('<div class=\"sc_bgBar\"><span class=\"text\"></span></div>');\n            // var stext = element.formatTime(data.start);\n            // var etext = element.formatTime(data.end);\n            // var snum = element._getScheduleCount(data.timeline);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: 0,\n                width: ((et - st) * setting.widthTimeX),\n                height: $element.find('.sc_main .timeline').eq(data.timeline).height()\n            });\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            $element.find('.sc_main .timeline').eq(data.timeline).append($bar);\n        },\n        /**\n         * スケジュール追加\n         *\n         * @param timeline\n         * @param data\n         * @returns {number}\n         */\n        _addScheduleData: function (timeline, data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = $('<div class=\"sc_bar\"><span class=\"head\"><span class=\"time\"></span></span><span class=\"text\"></span></div>');\n            var stext = methods.formatTime(data.start);\n            var etext = methods.formatTime(data.end);\n            var snum = methods._getScheduleCount.apply(element, [data.timeline]);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: ((snum * setting.timeLineY) + setting.timeLinePaddingTop),\n                width: ((et - st) * setting.widthTimeX),\n                height: (setting.timeLineY)\n            });\n            $bar.find('.time').text(stext + '-' + etext);\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            var $row = $element.find('.sc_main .timeline').eq(timeline);\n            $row.append($bar);\n            // データの追加\n            scheduleData.push(data);\n            // コールバックがセットされていたら呼出\n            if (setting.onAppendSchedule) {\n                setting.onAppendSchedule($bar, data);\n            }\n            // key\n            var key = scheduleData.length - 1;\n            $bar.data('sc_key', key);\n\n            $bar.bind('mouseup', function () {\n                // コールバックがセットされていたら呼出\n                if (setting.onClick) {\n                    if ($(this).data('dragCheck') !== true && $(this).data('resizeCheck') !== true) {\n                        var node = $(this);\n                        var scKey = node.data('sc_key');\n                        setting.onClick(node, scheduleData[scKey]);\n                    }\n                }\n            });\n\n            var $node = $element.find('.sc_bar');\n            // move node.\n            $node.draggable({\n                grid: [setting.widthTimeX, 1],\n                containment: '.sc_main',\n                helper: 'original',\n                start: function (event, ui) {\n                    var node = {};\n                    node.node = this;\n                    node.offsetTop = ui.position.top;\n                    node.offsetLeft = ui.position.left;\n                    node.currentTop = ui.position.top;\n                    node.currentLeft = ui.position.left;\n                    node.timeline = methods._getTimeLineNumber.apply(element, [ui.position.top]);\n                    node.nowTimeline = node.timeline;\n                    currentNode = node;\n                },\n                drag: function (event, ui) {\n                    $(this).data('dragCheck', true);\n                    if (!currentNode) {\n                        return false;\n                    }\n                    var $moveNode = $(this);\n                    var scKey = $moveNode.data('sc_key');\n                    // var originalTop = ui.originalPosition.top;\n                    // var originalLeft = ui.originalPosition.left;\n                    // var positionTop = ui.position.top;\n                    // var positionLeft = ui.position.left;\n                    var timelineNum = methods._getTimeLineNumber.apply(element, [ui.position.top]);\n                    // 位置の修正\n                    // ui.position.top = Math.floor(ui.position.top / setting.timeLineY) * setting.timeLineY;\n                    // ui.position.top = element._getScheduleCount(timelineNum) * setting.timeLineY;\n                    ui.position.left = Math.floor(ui.position.left / setting.widthTimeX) * setting.widthTimeX;\n\n\n                    // $moveNode.find(\".text\").text(timelineNum+\" \"+(element._getScheduleCount(timelineNum) + 1));\n                    if (currentNode.nowTimeline !== timelineNum) {\n                        // 高さの調節\n                        // element._resizeRow(currentNode[\"nowTimeline\"],element._getScheduleCount(currentNode[\"nowTimeline\"]));\n                        // element._resizeRow(timelineNum,element._getScheduleCount(timelineNum) + 1);\n                        // 現在のタイムライン\n                        currentNode.nowTimeline = timelineNum;\n                        // } else {\n                        // ui.position.top = currentNode[\"currentTop\"];\n                    }\n                    currentNode.currentTop = ui.position.top;\n                    currentNode.currentLeft = ui.position.left;\n                    // テキスト変更\n                    methods._rewriteBarText.apply(element, [$moveNode, scheduleData[scKey]]);\n                    return true;\n                },\n                // 要素の移動が終った後の処理\n                stop: function () {\n                    $(this).data('dragCheck', false);\n                    currentNode = null;\n\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    var x = node.position().left;\n                    // var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[scKey].end - scheduleData[scKey].start));\n\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n                    // コールバックがセットされていたら呼出\n                    if (setting.onChange) {\n                        setting.onChange(node, scheduleData[scKey]);\n                    }\n                }\n            });\n            $node.resizable({\n                handles: 'e',\n                grid: [setting.widthTimeX, setting.timeLineY],\n                minWidth: setting.widthTimeX,\n                start: function () {\n                    var node = $(this);\n                    node.data('resizeCheck', true);\n                },\n                // 要素の移動が終った後の処理\n                stop: function () {\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    var x = node.position().left;\n                    var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var timelineNum = scheduleData[scKey].timeline;\n\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n\n                    // 高さ調整\n                    methods._resetBarPosition.apply(element, [timelineNum]);\n                    // テキスト変更\n                    methods._rewriteBarText.apply(element, [node, scheduleData[scKey]]);\n\n                    node.data('resizeCheck', false);\n                    // コールバックがセットされていたら呼出\n                    if (setting.onChange) {\n                        setting.onChange(node, scheduleData[scKey]);\n                    }\n                }\n            });\n            return key;\n        },\n        /**\n         * スケジュール数の取得\n         *\n         * @param {number} n row number\n         * @returns {number}\n         */\n        _getScheduleCount: function (n) {\n            var num = 0;\n            for (var i in scheduleData) {\n                if (scheduleData[i].timeline === n) {\n                    num++;\n                }\n            }\n            return num;\n        },\n        /**\n         * add rows\n         *\n         * @param timeline\n         * @param row\n         */\n        _addRow: function (timeline, row) {\n            var title = row.title;\n            var id = $element.find('.sc_main .timeline').length;\n\n            var html;\n\n            html = '';\n            html += '<div class=\"timeline\"><span>' + title + '</span></div>';\n            var $data = $(html);\n            // event call\n            if (setting.onInitRow) {\n                setting.onInitRow($data, row);\n            }\n            $element.find('.sc_data_scroll').append($data);\n\n            html = '';\n            html += '<div class=\"timeline\"></div>';\n            var $timeline = $(html);\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                var $tl = $('<div class=\"tl\"></div>');\n                $tl.width(setting.widthTimeX - setting.timeBorder);\n\n                $tl.data('time', methods.formatTime(t));\n                $tl.data('timeline', timeline);\n                $timeline.append($tl);\n            }\n            // クリックイベント\n            // left click\n            $timeline.find('.tl').click(function () {\n                // element._moveSchedules($(this).data('timeline'), $(this), setting.bundleMoveWidth);\n                if (setting.onScheduleClick) {\n                    setting.onScheduleClick(this, $(this).data('time'), $(this).data('timeline'), timelineData[$(this).data('timeline')]);\n                }\n            });\n            // right click\n            $timeline.find('.tl').on('contextmenu', function () {\n                // element._moveSchedules($(this).data('timeline'), $(this), -1 * setting.bundleMoveWidth);\n                if (setting.onScheduleClick) {\n                    setting.onScheduleClick(this, $(this).data('time'), $(this).data('timeline'), timelineData[$(this).data('timeline')]);\n                }\n                return false;\n            });\n\n            $element.find('.sc_main').append($timeline);\n\n            timelineData[timeline] = row;\n\n            if (row.class && (row.class !== '')) {\n                $element.find('.sc_data .timeline').eq(id).addClass(row.class);\n                $element.find('.sc_main .timeline').eq(id).addClass(row.class);\n            }\n            // スケジュールタイムライン\n            if (row.schedule) {\n                for (var i in row.schedule) {\n                    var bdata = row.schedule[i];\n                    var s = methods.calcStringTime(bdata.start);\n                    var e = methods.calcStringTime(bdata.end);\n\n                    var data = {};\n                    data.start = s;\n                    data.end = e;\n                    if (bdata.text) {\n                        data.text = bdata.text;\n                    }\n                    data.timeline = i;\n                    data.data = {};\n                    if (bdata.data) {\n                        data.data = bdata.data;\n                    }\n                    methods._addScheduleData.apply(element, [id, data]);\n                }\n            }\n            // 高さの調整\n            methods._resetBarPosition.apply(element, [id]);\n            $element.find('.sc_main .timeline').eq(id).droppable({\n                accept: '.sc_bar',\n                drop: function (ev, ui) {\n                    var node = ui.draggable;\n                    var scKey = node.data('sc_key');\n                    var nowTimelineNum = scheduleData[scKey].timeline;\n                    var timelineNum = $element.find('.sc_main .timeline').index(this);\n                    // タイムラインの変更\n                    scheduleData[scKey].timeline = timelineNum;\n                    node.appendTo(this);\n                    // 高さ調整\n                    methods._resetBarPosition.apply(element, [nowTimelineNum]);\n                    methods._resetBarPosition.apply(element, [timelineNum]);\n                }\n            });\n            // コールバックがセットされていたら呼出\n            if (setting.onAppendRow) {\n                $element.find('.sc_main .timeline').eq(id).find('.sc_bar').each(function () {\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    setting.onAppendRow(node, scheduleData[scKey]);\n                });\n            }\n        },\n        /**\n         * テキストの変更\n         *\n         * @param node\n         * @param data\n         */\n        _rewriteBarText: function (node, data) {\n            var x = node.position().left;\n            // var w = node.width();\n            var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n            // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n            var end = start + (data.end - data.start);\n            var html = methods.formatTime(start) + '-' + methods.formatTime(end);\n            $(node).find('.time').html(html);\n        },\n        /**\n         *\n         * @param n\n         */\n        _resetBarPosition: function (n) {\n            // 要素の並び替え\n            var $barList = $element.find('.sc_main .timeline').eq(n).find('.sc_bar');\n            var codes = [];\n            var check = [];\n            var h = 0;\n            var $e1;\n            var $e2;\n            var c1;\n            var c2;\n            var s1;\n            var s2;\n            var e1;\n            var e2;\n            var i;\n            for (i = 0; i < $barList.length; i++) {\n                codes[i] = {\n                    code: i,\n                    x: $($barList[i]).position().left\n                };\n            }\n            // ソート\n            codes.sort(function (a, b) {\n                if (a.x < b.x) {\n                    return -1;\n                }\n                if (a.x > b.x) {\n                    return 1;\n                }\n                return 0;\n            });\n            for (i = 0; i < codes.length; i++) {\n                c1 = codes[i].code;\n                $e1 = $($barList[c1]);\n                for (h = 0; h < check.length; h++) {\n                    var next = false;\n                    for (var j = 0; j < check[h].length; j++) {\n                        c2 = check[h][j];\n                        $e2 = $($barList[c2]);\n\n                        s1 = $e1.position().left;\n                        e1 = $e1.position().left + $e1.width();\n                        s2 = $e2.position().left;\n                        e2 = $e2.position().left + $e2.width();\n                        if (s1 < e2 && e1 > s2) {\n                            next = true;\n                            continue;\n                        }\n                    }\n                    if (!next) {\n                        break;\n                    }\n                }\n                if (!check[h]) {\n                    check[h] = [];\n                }\n                $e1.css({\n                    top: ((h * setting.timeLineY) + setting.timeLinePaddingTop)\n                });\n                check[h][check[h].length] = c1;\n            }\n            // 高さの調整\n            methods._resizeRow.apply(this, [n, check.length]);\n        },\n        /**\n         *\n         * @param n\n         * @param height\n         */\n        _resizeRow: function (n, height) {\n            var h = Math.max(height, 1);\n            $element.find('.sc_data .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n            $element.find('.sc_main .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n\n            $element.find('.sc_main .timeline').eq(n).find('.sc_bgBar').each(function () {\n                $(this).height($(this).closest('.timeline').height());\n            });\n\n            $element.find('.sc_data').height($element.find('.sc_main_box').height());\n        },\n        /**\n         * resizeWindow\n         */\n        _resizeWindow: function () {\n            var scWidth = $element.width();\n            var scMainWidth = scWidth - setting.dataWidth - (setting.verticalScrollbar);\n            var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            $element.find('.sc_header_cell').width(setting.dataWidth);\n            $element.find('.sc_data,.sc_data_scroll').width(setting.dataWidth);\n            $element.find('.sc_header').width(scMainWidth);\n            $element.find('.sc_main_box').width(scMainWidth);\n            $element.find('.sc_header_scroll').width(setting.widthTimeX * cellNum);\n            $element.find('.sc_main_scroll').width(setting.widthTimeX * cellNum);\n        },\n        /**\n         * move all cells of the right of the specified time line cell\n         *\n         * @param timeline\n         * @param baseTimeLineCell\n         * @param moveWidth\n         */\n        _moveSchedules: function (timeline, baseTimeLineCell, moveWidth) {\n            var $barList = $element.find('.sc_main .timeline').eq(timeline).find('.sc_bar');\n            for (var i = 0; i < $barList.length; i++) {\n                var $bar = $($barList[i]);\n                if (baseTimeLineCell.position().left <= $bar.position().left) {\n                    var v1 = $bar.position().left + setting.widthTimeX * moveWidth;\n                    var v2 = Math.floor((tableEndTime - tableStartTime) / setting.widthTime) * setting.widthTimeX - $bar.width();\n                    $bar.css({\n                        left: Math.max(0, Math.min(v1, v2))\n                    });\n\n                    var scKey = $bar.data('sc_key');\n                    var start = tableStartTime + (Math.floor($bar.position().left / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[scKey].end - scheduleData[scKey].start));\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n                    methods._rewriteBarText.apply(element, [$bar, scheduleData[scKey]]);\n\n                    // if setting\n                    if (setting.onChange) {\n                        setting.onChange($bar, scheduleData[scKey]);\n                    }\n                }\n            }\n            methods._resetBarPosition.apply(element, [timeline]);\n        },\n        /**\n         * initialize\n         */\n        init: function (options) {\n            $element = $(this);\n            element = (this);\n            setting = $.extend({\n                className: 'jq-schedule',\n                rows: {},\n                startTime: '07:00',\n                endTime: '19:30',\n                widthTimeX: 25, // 1cell辺りの幅(px)\n                widthTime: 600, // 区切り時間(秒)\n                timeLineY: 50, // timeline height(px)\n                timeLineBorder: 1, // timeline height border\n                timeBorder: 1, // border width\n                timeLinePaddingTop: 0,\n                timeLinePaddingBottom: 0,\n                headTimeBorder: 1, // time border width\n                dataWidth: 160, // data width\n                verticalScrollbar: 0, // vertical scrollbar width\n                bundleMoveWidth: 1, // width to move all schedules to the right of the clicked time cell\n                // event\n                onInitRow: null,\n                onChange: null,\n                onClick: null,\n                onAppendRow: null,\n                onAppendSchedule: null,\n                onScheduleClick: null\n            }, options);\n            tableStartTime = methods.calcStringTime(setting.startTime);\n            tableEndTime = methods.calcStringTime(setting.endTime);\n            tableStartTime -= (tableStartTime % setting.widthTime);\n            tableEndTime -= (tableEndTime % setting.widthTime);\n\n            var html = '' +\n                '<div class=\"sc_menu\">' + '\\n' +\n                '<div class=\"sc_header_cell\"><span>&nbsp;</span></div>' + '\\n' +\n                '<div class=\"sc_header\">' + '\\n' +\n                '<div class=\"sc_header_scroll\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<br class=\"clear\" />' + '\\n' +\n                '</div>' + '\\n' +\n                '<div class=\"sc_wrapper\">' + '\\n' +\n                '<div class=\"sc_data\">' + '\\n' +\n                '<div class=\"sc_data_scroll\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<div class=\"sc_main_box\">' + '\\n' +\n                '<div class=\"sc_main_scroll\">' + '\\n' +\n                '<div class=\"sc_main\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<br class=\"clear\" />' + '\\n' +\n                '</div>';\n\n            $element.append(html);\n            $element.addClass(setting.className);\n\n            $element.find('.sc_main_box').scroll(function () {\n                $element.find('.sc_data_scroll').css('top', $(this).scrollTop() * -1);\n                $element.find('.sc_header_scroll').css('left', $(this).scrollLeft() * -1);\n            });\n            // add time cell\n            // var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            var beforeTime = -1;\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                if (\n                    (beforeTime < 0)\n                    || (Math.floor(beforeTime / 3600) !== Math.floor(t / 3600))) {\n                    html = '';\n                    html += '<div class=\"sc_time\">' + methods.formatTime(t) + '</div>';\n                    var $time = $(html);\n                    var cn = Number(\n                        Math.min((Math.ceil((t + setting.widthTime) / 3600) * 3600), tableEndTime) -\n                        t\n                    );\n                    var cellNum = Math.floor(cn / setting.widthTime);\n                    $time.width((cellNum * setting.widthTimeX) - setting.headTimeBorder);\n                    $element.find('.sc_header_scroll').append($time);\n\n                    beforeTime = t;\n                }\n            }\n\n            $(window).resize(function () {\n                methods._resizeWindow.apply(element);\n            }).trigger('resize');\n\n            // addrow\n            for (var i in setting.rows) {\n                methods._addRow.apply(this, [i, setting.rows[i]]);\n            }\n            return this;\n        }\n    };\n    $.fn.timeSchedule = function (method) {\n        // Method calling logic\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('Method ' + method + ' does not exist on jQuery.timeSchedule');\n        }\n        return this;\n    };\n}(jQuery));\n"]}