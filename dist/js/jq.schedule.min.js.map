{"version":3,"sources":["js/jq.schedule.js"],"names":["$","$element","element","setting","scheduleData","timelineData","currentNode","tableStartTime","tableEndTime","methods","calcStringTime","string","slice","split","Number","formatTime","min","getTimelineData","getTimeLineNumber","top","num","n","tn","Math","ceil","timeLineY","timeLinePaddingTop","timeLinePaddingBottom","i","rows","r","tr","schedule","length","timeline","max","addScheduleBgData","data","st","start","widthTime","et","floor","end","$bar","css","left","widthTimeX","width","height","find","eq","text","class","addClass","append","addScheduleData","stext","etext","snum","getScheduleCount","apply","$row","push","append_schedule","key","bind","click","this","node","scKey","$node","draggable","grid","containment","helper","event","ui","offsetTop","position","offsetLeft","currentTop","currentLeft","nowTimeline","drag","$moveNode","timelineNum","rewriteBarText","stop","x","change","resizable","handles","minWidth","w","resetBarPosition","addRow","row","html","title","id","$data","init_data","$timeline","t","$tl","timeBorder","time_click","on","bdata","s","e","droppable","accept","drop","ev","nowTimelineNum","index","appendTo","each","getScheduleData","extend","timelineIndex","$e1","$e2","c1","c2","s1","s2","e1","$barList","codes","check","h","code","sort","a","b","next","j","resizeRow","timeLineBorder","closest","resizeWindow","scMainWidth","dataWidth","cellNum","moveSchedules","baseTimeLineCell","moveWidth","v1","v2","init","options","className","startTime","endTime","headTimeBorder","verticalScrollbar","bundleMoveWidth","debug","scroll","scrollTop","scrollLeft","beforeTime","$time","cn","window","resize","trigger","setInterval","d","fn","timeSchedule","method","Array","prototype","call","arguments","error","jQuery"],"mappings":"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","file":"jq.schedule.min.js","sourcesContent":["(function ($) {\n    'use strict';\n\n    var setting = null;\n    var scheduleData = [];\n    var timelineData = [];\n    var $element, element;\n    var currentNode = null;\n    var tableStartTime = 0;\n    var tableEndTime = 0;\n\n    var methods = {\n\n        /**\n         *\n         * @param {string} string\n         * @returns {number}\n         */\n        calcStringTime: function (string) {\n            var slice = string.split(':');\n            var h = Number(slice[0]) * 60 * 60;\n            var i = Number(slice[1]) * 60;\n            var min = h + i;\n            return min;\n        },\n        /**\n         *\n         * @param {number} min\n         * @returns {string}\n         */\n        formatTime: function (min) {\n            var h = '' + (min / 36000 | 0) + (min / 3600 % 10 | 0);\n            var i = '' + (min % 3600 / 600 | 0) + (min % 3600 / 60 % 10 | 0);\n            return h + ':' + i;\n        },\n\n        // /**\n        //  *\n        //  * @returns {any[]}\n        //  */\n        // getScheduleData: function () {\n        //     return scheduleData;\n        // },\n        /**\n         *\n         * @returns {any[]}\n         */\n        getTimelineData: function () {\n            return timelineData;\n        },\n        /**\n         * 現在のタイムライン番号を取得\n         *\n         * @param top\n         * @returns {number}\n         */\n        getTimeLineNumber: function (top) {\n            var num = 0;\n            var n = 0;\n            var tn = Math.ceil(top / (setting.timeLineY + setting.timeLinePaddingTop + setting.timeLinePaddingBottom));\n            for (var i in setting.rows) {\n                var r = setting.rows[i];\n                var tr = 0;\n                if (typeof r.schedule === 'object') {\n                    tr = r.schedule.length;\n                }\n                if (currentNode && currentNode.timeline) {\n                    tr++;\n                }\n                n += Math.max(tr, 1);\n                if (n >= tn) {\n                    break;\n                }\n                num++;\n            }\n            return num;\n        },\n        /**\n         * 背景データ追加\n         *\n         * @param data\n         */\n        addScheduleBgData: function (data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = $('<div class=\"sc_bgBar\"><span class=\"text\"></span></div>');\n            // var stext = element.formatTime(data.start);\n            // var etext = element.formatTime(data.end);\n            // var snum = element.getScheduleCount(data.timeline);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: 0,\n                width: ((et - st) * setting.widthTimeX),\n                height: $element.find('.sc_main .timeline').eq(data.timeline).height()\n            });\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            $element.find('.sc_main .timeline').eq(data.timeline).append($bar);\n        },\n        /**\n         * スケジュール追加\n         *\n         * @param data\n         * @returns {number}\n         */\n        addScheduleData: function (timeline, data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = $('<div class=\"sc_bar\"><span class=\"head\"><span class=\"time\"></span></span><span class=\"text\"></span></div>');\n            var stext = methods.formatTime(data.start);\n            var etext = methods.formatTime(data.end);\n            var snum = methods.getScheduleCount.apply(element, [data.timeline]);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: ((snum * setting.timeLineY) + setting.timeLinePaddingTop),\n                width: ((et - st) * setting.widthTimeX),\n                height: (setting.timeLineY)\n            });\n            $bar.find('.time').text(stext + '-' + etext);\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            var $row = $element.find('.sc_main .timeline').eq(timeline);\n            $row.append($bar);\n            // データの追加\n            scheduleData.push(data);\n            // コールバックがセットされていたら呼出\n            if (setting.append_schedule) {\n                setting.append_schedule($row, data);\n            }\n            // key\n            var key = scheduleData.length - 1;\n            $bar.data('sc_key', key);\n\n            $bar.bind('mouseup', function () {\n                // コールバックがセットされていたら呼出\n                if (setting.click) {\n                    if ($(this).data('dragCheck') !== true && $(this).data('resizeCheck') !== true) {\n                        var node = $(this);\n                        var scKey = node.data('sc_key');\n                        setting.click(node, scheduleData[scKey]);\n                    }\n                }\n            });\n\n            var $node = $element.find('.sc_bar');\n            // move node.\n            $node.draggable({\n                grid: [setting.widthTimeX, 1],\n                containment: '.sc_main',\n                helper: 'original',\n                start: function (event, ui) {\n                    var node = {};\n                    node.node = this;\n                    node.offsetTop = ui.position.top;\n                    node.offsetLeft = ui.position.left;\n                    node.currentTop = ui.position.top;\n                    node.currentLeft = ui.position.left;\n                    node.timeline = methods.getTimeLineNumber.apply(element, [ui.position.top]);\n                    node.nowTimeline = node.timeline;\n                    currentNode = node;\n                },\n                drag: function (event, ui) {\n                    $(this).data('dragCheck', true);\n                    if (!currentNode) {\n                        return false;\n                    }\n                    var $moveNode = $(this);\n                    var scKey = $moveNode.data('sc_key');\n                    // var originalTop = ui.originalPosition.top;\n                    // var originalLeft = ui.originalPosition.left;\n                    // var positionTop = ui.position.top;\n                    // var positionLeft = ui.position.left;\n                    var timelineNum = methods.getTimeLineNumber.apply(element, [ui.position.top]);\n                    // 位置の修正\n                    // ui.position.top = Math.floor(ui.position.top / setting.timeLineY) * setting.timeLineY;\n                    // ui.position.top = element.getScheduleCount(timelineNum) * setting.timeLineY;\n                    ui.position.left = Math.floor(ui.position.left / setting.widthTimeX) * setting.widthTimeX;\n\n\n                    // $moveNode.find(\".text\").text(timelineNum+\" \"+(element.getScheduleCount(timelineNum) + 1));\n                    if (currentNode.nowTimeline !== timelineNum) {\n                        // 高さの調節\n                        // element.resizeRow(currentNode[\"nowTimeline\"],element.getScheduleCount(currentNode[\"nowTimeline\"]));\n                        // element.resizeRow(timelineNum,element.getScheduleCount(timelineNum) + 1);\n                        // 現在のタイムライン\n                        currentNode.nowTimeline = timelineNum;\n                        // } else {\n                        // ui.position.top = currentNode[\"currentTop\"];\n                    }\n                    currentNode.currentTop = ui.position.top;\n                    currentNode.currentLeft = ui.position.left;\n                    // テキスト変更\n                    methods.rewriteBarText.apply(element, [$moveNode, scheduleData[scKey]]);\n                    return true;\n                },\n                // 要素の移動が終った後の処理\n                stop: function () {\n                    $(this).data('dragCheck', false);\n                    currentNode = null;\n\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    var x = node.position().left;\n                    // var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[scKey].end - scheduleData[scKey].start));\n\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n                    // コールバックがセットされていたら呼出\n                    if (setting.change) {\n                        setting.change(node, scheduleData[scKey]);\n                    }\n                }\n            });\n            $node.resizable({\n                handles: 'e',\n                grid: [setting.widthTimeX, setting.timeLineY],\n                minWidth: setting.widthTimeX,\n                start: function () {\n                    var node = $(this);\n                    node.data('resizeCheck', true);\n                },\n                // 要素の移動が終った後の処理\n                stop: function () {\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    var x = node.position().left;\n                    var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var timelineNum = scheduleData[scKey].timeline;\n\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n\n                    // 高さ調整\n                    methods.resetBarPosition.apply(element, [timelineNum]);\n                    // テキスト変更\n                    methods.rewriteBarText.apply(element, [node, scheduleData[scKey]]);\n\n                    node.data('resizeCheck', false);\n                    // コールバックがセットされていたら呼出\n                    if (setting.change) {\n                        setting.change(node, scheduleData[scKey]);\n                    }\n                }\n            });\n            return key;\n        },\n        /**\n         * スケジュール数の取得\n         *\n         * @param {number} n row number\n         * @returns {number}\n         */\n        getScheduleCount: function (n) {\n            var num = 0;\n            for (var i in scheduleData) {\n                if (scheduleData[i].timeline === n) {\n                    num++;\n                }\n            }\n            return num;\n        },\n        /**\n         * add rows\n         *\n         * @param timeline\n         * @param row\n         */\n        addRow: function (timeline, row) {\n            var title = row.title;\n            var id = $element.find('.sc_main .timeline').length;\n\n            var html;\n\n            html = '';\n            html += '<div class=\"timeline\"><span>' + title + '</span></div>';\n            var $data = $(html);\n            // event call\n            if (setting.init_data) {\n                setting.init_data($data, row);\n            }\n            $element.find('.sc_data_scroll').append($data);\n\n            html = '';\n            html += '<div class=\"timeline\"></div>';\n            var $timeline = $(html);\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                var $tl = $('<div class=\"tl\"></div>');\n                $tl.width(setting.widthTimeX - setting.timeBorder);\n\n                $tl.data('time', methods.formatTime(t));\n                $tl.data('timeline', timeline);\n                $timeline.append($tl);\n            }\n            // クリックイベント\n            // left click\n            $timeline.find('.tl').click(function () {\n                // element.moveSchedules($(this).data('timeline'), $(this), setting.bundleMoveWidth);\n                if (setting.time_click) {\n                    setting.time_click(this, $(this).data('time'), $(this).data('timeline'), timelineData[$(this).data('timeline')]);\n                }\n            });\n            // right click\n            $timeline.find('.tl').on('contextmenu', function () {\n                // element.moveSchedules($(this).data('timeline'), $(this), -1 * setting.bundleMoveWidth);\n                if (setting.time_click) {\n                    setting.time_click(this, $(this).data('time'), $(this).data('timeline'), timelineData[$(this).data('timeline')]);\n                }\n                return false;\n            });\n\n            $element.find('.sc_main').append($timeline);\n\n            timelineData[timeline] = row;\n\n            if (row.class && (row.class !== '')) {\n                $element.find('.sc_data .timeline').eq(id).addClass(row.class);\n                $element.find('.sc_main .timeline').eq(id).addClass(row.class);\n            }\n            // スケジュールタイムライン\n            if (row.schedule) {\n                for (var i in row.schedule) {\n                    var bdata = row.schedule[i];\n                    var s = methods.calcStringTime(bdata.start);\n                    var e = methods.calcStringTime(bdata.end);\n\n                    var data = {};\n                    data.start = s;\n                    data.end = e;\n                    if (bdata.text) {\n                        data.text = bdata.text;\n                    }\n                    data.data = {};\n                    if (bdata.data) {\n                        data.data = bdata.data;\n                    }\n                    methods.addScheduleData.apply(element, [id, data]);\n                }\n            }\n            // 高さの調整\n            methods.resetBarPosition.apply(element, [id]);\n            $element.find('.sc_main .timeline').eq(id).droppable({\n                accept: '.sc_bar',\n                drop: function (ev, ui) {\n                    var node = ui.draggable;\n                    var scKey = node.data('sc_key');\n                    var nowTimelineNum = scheduleData[scKey].timeline;\n                    var timelineNum = $element.find('.sc_main .timeline').index(this);\n                    // タイムラインの変更\n                    scheduleData[scKey].timeline = timelineNum;\n                    node.appendTo(this);\n                    // 高さ調整\n                    methods.resetBarPosition.apply(element, [nowTimelineNum]);\n                    methods.resetBarPosition.apply(element, [timelineNum]);\n                }\n            });\n            // コールバックがセットされていたら呼出\n            if (setting.append) {\n                $element.find('.sc_main .timeline').eq(id).find('.sc_bar').each(function () {\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    setting.append(node, scheduleData[scKey]);\n                });\n            }\n        },\n        /**\n         *\n         * @returns {any[]}\n         */\n        getScheduleData: function () {\n            var data = [];\n            var i;\n\n            for (i in timelineData) {\n                if (typeof timelineData[i] === 'undefined') continue;\n                var timeline = $.extend(true, {}, timelineData[i]);\n                timeline.schedule = [];\n                data.push(timeline);\n            }\n\n            for (i in scheduleData) {\n                if (typeof scheduleData[i] === 'undefined') {\n                    continue;\n                }\n                var schedule = $.extend(true, {}, scheduleData[i]);\n                var timelineIndex = schedule.timeline;\n                delete schedule.timeline;\n                schedule.start = methods.formatTime(schedule.start);\n                schedule.end = methods.formatTime(schedule.end);\n                data[timelineIndex].schedule.push(schedule);\n            }\n\n            return data;\n        },\n        /**\n         * テキストの変更\n         *\n         * @param node\n         * @param data\n         */\n        rewriteBarText: function (node, data) {\n            var x = node.position().left;\n            // var w = node.width();\n            var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n            // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n            var end = start + (data.end - data.start);\n            var html = methods.formatTime(start) + '-' + methods.formatTime(end);\n            $(node).find('.time').html(html);\n        },\n        /**\n         *\n         * @param n\n         */\n        resetBarPosition: function (n) {\n            // 要素の並び替え\n            var $barList = $element.find('.sc_main .timeline').eq(n).find('.sc_bar');\n            var codes = [];\n            var check = [];\n            var h = 0;\n            var $e1;\n            var $e2;\n            var c1;\n            var c2;\n            var s1;\n            var s2;\n            var e1;\n            var e2;\n            var i;\n            for (i = 0; i < $barList.length; i++) {\n                codes[i] = {\n                    code: i,\n                    x: $($barList[i]).position().left\n                };\n            }\n            // ソート\n            codes.sort(function (a, b) {\n                if (a.x < b.x) {\n                    return -1;\n                }\n                if (a.x > b.x) {\n                    return 1;\n                }\n                return 0;\n            });\n            for (i = 0; i < codes.length; i++) {\n                c1 = codes[i].code;\n                $e1 = $($barList[c1]);\n                for (h = 0; h < check.length; h++) {\n                    var next = false;\n                    for (var j = 0; j < check[h].length; j++) {\n                        c2 = check[h][j];\n                        $e2 = $($barList[c2]);\n\n                        s1 = $e1.position().left;\n                        e1 = $e1.position().left + $e1.width();\n                        s2 = $e2.position().left;\n                        e2 = $e2.position().left + $e2.width();\n                        if (s1 < e2 && e1 > s2) {\n                            next = true;\n                            continue;\n                        }\n                    }\n                    if (!next) {\n                        break;\n                    }\n                }\n                if (!check[h]) {\n                    check[h] = [];\n                }\n                $e1.css({\n                    top: ((h * setting.timeLineY) + setting.timeLinePaddingTop)\n                });\n                check[h][check[h].length] = c1;\n            }\n            // 高さの調整\n            methods.resizeRow.apply(this, [n, check.length]);\n        },\n        /**\n         *\n         * @param n\n         * @param height\n         */\n        resizeRow: function (n, height) {\n            // var h = Math.max(element.getScheduleCount(n),1);\n            var h = Math.max(height, 1);\n            $element.find('.sc_data .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n            $element.find('.sc_main .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n\n            $element.find('.sc_main .timeline').eq(n).find('.sc_bgBar').each(function () {\n                $(this).height($(this).closest('.timeline').height());\n            });\n\n            $element.find('.sc_data').height($element.find('.sc_main_box').height());\n        },\n        /**\n         * resizeWindow\n         */\n        resizeWindow: function () {\n            var scWidth = $element.width();\n            var scMainWidth = scWidth - setting.dataWidth - (setting.verticalScrollbar);\n            var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            $element.find('.sc_header_cell').width(setting.dataWidth);\n            $element.find('.sc_data,.sc_data_scroll').width(setting.dataWidth);\n            $element.find('.sc_header').width(scMainWidth);\n            $element.find('.sc_main_box').width(scMainWidth);\n            $element.find('.sc_header_scroll').width(setting.widthTimeX * cellNum);\n            $element.find('.sc_main_scroll').width(setting.widthTimeX * cellNum);\n        },\n        /**\n         * move all cells of the right of the specified time line cell\n         *\n         * @param timeline\n         * @param baseTimeLineCell\n         * @param moveWidth\n         */\n        moveSchedules: function (timeline, baseTimeLineCell, moveWidth) {\n            var $barList = $element.find('.sc_main .timeline').eq(timeline).find('.sc_bar');\n            for (var i = 0; i < $barList.length; i++) {\n                var $bar = $($barList[i]);\n                if (baseTimeLineCell.position().left <= $bar.position().left) {\n                    var v1 = $bar.position().left + setting.widthTimeX * moveWidth;\n                    var v2 = Math.floor((tableEndTime - tableStartTime) / setting.widthTime) * setting.widthTimeX - $bar.width();\n                    $bar.css({\n                        left: Math.max(0, Math.min(v1, v2))\n                    });\n\n                    var scKey = $bar.data('sc_key');\n                    var start = tableStartTime + (Math.floor($bar.position().left / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[scKey].end - scheduleData[scKey].start));\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n                    methods.rewriteBarText.apply(element, [$bar, scheduleData[scKey]]);\n\n                    // if setting\n                    if (setting.change) {\n                        setting.change($bar, scheduleData[scKey]);\n                    }\n                }\n            }\n            methods.resetBarPosition.apply(element, [timeline]);\n        },\n        /**\n         * initialize\n         */\n        init: function (options) {\n            $element = $(this);\n            element = (this);\n            setting = $.extend({\n                className: 'jq-schedule',\n                rows: {},\n                startTime: '07:00',\n                endTime: '19:30',\n                widthTimeX: 25, // 1cell辺りの幅(px)\n                widthTime: 600, // 区切り時間(秒)\n                timeLineY: 50, // timeline height(px)\n                timeLineBorder: 1, // timeline height border\n                timeBorder: 1, // border width\n                timeLinePaddingTop: 0,\n                timeLinePaddingBottom: 0,\n                headTimeBorder: 1, // time border width\n                dataWidth: 160, // data width\n                verticalScrollbar: 0, // vertical scrollbar width\n                bundleMoveWidth: 1, // width to move all schedules to the right of the clicked time cell\n                // event\n                init_data: null,\n                change: null,\n                click: null,\n                append: null,\n                append_schedule: null,\n                time_click: null,\n                debug: '' // debug selecter\n            }, options);\n            tableStartTime = methods.calcStringTime(setting.startTime);\n            tableEndTime = methods.calcStringTime(setting.endTime);\n            tableStartTime -= (tableStartTime % setting.widthTime);\n            tableEndTime -= (tableEndTime % setting.widthTime);\n\n            var html = '' +\n                '<div class=\"sc_menu\">' + '\\n' +\n                '<div class=\"sc_header_cell\"><span>&nbsp;</span></div>' + '\\n' +\n                '<div class=\"sc_header\">' + '\\n' +\n                '<div class=\"sc_header_scroll\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<br class=\"clear\" />' + '\\n' +\n                '</div>' + '\\n' +\n                '<div class=\"sc_wrapper\">' + '\\n' +\n                '<div class=\"sc_data\">' + '\\n' +\n                '<div class=\"sc_data_scroll\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<div class=\"sc_main_box\">' + '\\n' +\n                '<div class=\"sc_main_scroll\">' + '\\n' +\n                '<div class=\"sc_main\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<br class=\"clear\" />' + '\\n' +\n                '</div>';\n\n            $element.append(html);\n            $element.addClass(setting.className);\n\n            $element.find('.sc_main_box').scroll(function () {\n                $element.find('.sc_data_scroll').css('top', $(this).scrollTop() * -1);\n                $element.find('.sc_header_scroll').css('left', $(this).scrollLeft() * -1);\n            });\n            // add time cell\n            // var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            var beforeTime = -1;\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                if (\n                    (beforeTime < 0)\n                    || (Math.floor(beforeTime / 3600) !== Math.floor(t / 3600))) {\n                    html = '';\n                    html += '<div class=\"sc_time\">' + methods.formatTime(t) + '</div>';\n                    var $time = $(html);\n                    var cn = Number(\n                        Math.min((Math.ceil((t + setting.widthTime) / 3600) * 3600), tableEndTime) -\n                        t\n                    );\n                    var cellNum = Math.floor(cn / setting.widthTime);\n                    $time.width((cellNum * setting.widthTimeX) - setting.headTimeBorder);\n                    $element.find('.sc_header_scroll').append($time);\n\n                    beforeTime = t;\n                }\n            }\n\n            $(window).resize(function () {\n                methods.resizeWindow.apply(element);\n            }).trigger('resize');\n\n            // addrow\n            for (var i in setting.rows) {\n                methods.addRow.apply(this, [i, setting.rows[i]]);\n            }\n            if (setting.debug && setting.debug !== '') {\n                setInterval(function () {\n                    methods.debug.apply(element);\n                }, 10);\n            }\n        },\n        debug: function () {\n            var html = '';\n            for (var i in scheduleData) {\n                html += '<div>';\n\n                html += i + ' : ';\n                var d = scheduleData[i];\n                for (var n in d) {\n                    var dd = d[n];\n                    html += n + ' ' + dd;\n                }\n\n                html += '</div>';\n            }\n            $(setting.debug).html(html);\n        }\n    };\n    $.fn.timeSchedule = function (method) {\n        // Method calling logic\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('Method ' + method + ' does not exist on jQuery.timeSchedule');\n        }\n        return this;\n    };\n}(jQuery));\n"]}