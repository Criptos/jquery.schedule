{"version":3,"sources":["js/jq.schedule.js"],"names":["$","$element","element","setting","scheduleData","timelineData","currentNode","tableStartTime","tableEndTime","methods","calcStringTime","string","slice","split","Number","formatTime","min","i","data","schedule","d","timeline","push","resetData","find","remove","_resizeRow","apply","this","addSchedule","start","end","text","_addScheduleData","_resetBarPosition","setDraggable","enable","e","draggable","setResizable","resizable","_getTimeLineNumber","top","num","n","tn","Math","ceil","timeLineY","timeLinePaddingTop","timeLinePaddingBottom","rows","r","tr","length","max","_addScheduleBgData","st","widthTime","et","floor","$bar","css","left","widthTimeX","width","height","eq","class","addClass","append","stext","etext","snum","_getScheduleCount","onAppendSchedule","key","bind","onClick","node","scKey","$node","grid","containment","helper","event","ui","offsetTop","position","offsetLeft","currentTop","currentLeft","nowTimeline","drag","$moveNode","timelineNum","_rewriteBarText","stop","x","onChange","handles","minWidth","w","_addRow","row","html","title","id","$data","onInitRow","$timeline","t","$tl","timeBorder","click","onScheduleClick","on","bdata","s","droppable","accept","drop","ev","nowTimelineNum","index","appendTo","onAppendRow","each","$e1","$e2","c1","c2","s1","s2","e1","$barList","codes","check","h","code","sort","a","b","next","j","timeLineBorder","closest","_resizeWindow","scMainWidth","dataWidth","cellNum","_moveSchedules","baseTimeLineCell","moveWidth","v1","v2","init","options","extend","className","startTime","endTime","headTimeBorder","verticalScrollbar","bundleMoveWidth","scroll","scrollTop","scrollLeft","beforeTime","$time","cn","window","resize","trigger","fn","timeSchedule","method","Array","prototype","call","arguments","error","jQuery"],"mappings":"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","file":"jq.schedule.min.js","sourcesContent":["(function ($) {\n    'use strict';\n\n    var setting = null;\n    var scheduleData = [];\n    var timelineData = [];\n    var $element, element;\n    var currentNode = null;\n    var tableStartTime = 0;\n    var tableEndTime = 0;\n\n    var methods = {\n        /**\n         *\n         * @param {string} string\n         * @returns {number}\n         */\n        calcStringTime: function (string) {\n            var slice = string.split(':');\n            var h = Number(slice[0]) * 60 * 60;\n            var i = Number(slice[1]) * 60;\n            var min = h + i;\n            return min;\n        },\n        /**\n         *\n         * @param {number} min\n         * @returns {string}\n         */\n        formatTime: function (min) {\n            var h = '' + (min / 36000 | 0) + (min / 3600 % 10 | 0);\n            var i = '' + (min % 3600 / 600 | 0) + (min % 3600 / 60 % 10 | 0);\n            return h + ':' + i;\n        },\n\n        /**\n         * get scheduleData\n         * @returns {any[]}\n         */\n        scheduleData: function () {\n            return scheduleData;\n        },\n        /**\n         * get timelineData\n         * @returns {any[]}\n         */\n        timelineData: function () {\n            var data = [];\n            var i;\n            for (i in timelineData) {\n                data[i] = timelineData[i];\n                data[i].schedule = [];\n            }\n            for (i in scheduleData) {\n                var d = scheduleData[i];\n                if (typeof d.timeline === 'undefined') {\n                    continue;\n                }\n                if (typeof data[d.timeline] === 'undefined') {\n                    continue;\n                }\n                data[d.timeline].schedule.push(d);\n            }\n            return data;\n        },\n        /**\n         * reset data\n         */\n        resetData: function () {\n            scheduleData = [];\n            $element.find('.sc_bar').remove();\n            for (var i in timelineData) {\n                timelineData[i].schedule = [];\n                methods._resizeRow.apply(this, [i, 0]);\n            }\n            return this;\n        },\n        /**\n         * add schedule data\n         *\n         * @param {number} timeline\n         * @param {object} data\n         * @returns {methods}\n         */\n        addSchedule: function (timeline, data) {\n            var d = {\n                start: methods.calcStringTime(data.start),\n                end: methods.calcStringTime(data.end),\n                text: data.text,\n                timeline: timeline\n            };\n            if (data.data) {\n                d.data = data.data;\n            }\n            methods._addScheduleData.apply(this, [timeline, d]);\n            methods._resetBarPosition.apply(this, [timeline]);\n            return this;\n        },\n        /**\n         * switch draggable\n         * @param {boolean} enable\n         */\n        setDraggable: function (enable) {\n            var e = enable ? true : false;\n            if (e !== setting.draggable) {\n                setting.draggable = e;\n                if (e) {\n                    $element.find('.sc_bar').draggable('enable');\n                } else {\n                    $element.find('.sc_bar').draggable('disable');\n                }\n            }\n        },\n        /**\n         * switch resizable\n         * @param {boolean} enable\n         */\n        setResizable: function (enable) {\n            var e = enable ? true : false;\n            if (e !== setting.resizable) {\n                setting.resizable = e;\n                if (e) {\n                    $element.find('.sc_bar').resizable('enable');\n                } else {\n                    $element.find('.sc_bar').resizable('disable');\n                }\n            }\n        },\n        /**\n         * 現在のタイムライン番号を取得\n         *\n         * @param top\n         * @returns {number}\n         */\n        _getTimeLineNumber: function (top) {\n            var num = 0;\n            var n = 0;\n            var tn = Math.ceil(top / (setting.timeLineY + setting.timeLinePaddingTop + setting.timeLinePaddingBottom));\n            for (var i in setting.rows) {\n                var r = setting.rows[i];\n                var tr = 0;\n                if (typeof r.schedule === 'object') {\n                    tr = r.schedule.length;\n                }\n                if (currentNode && currentNode.timeline) {\n                    tr++;\n                }\n                n += Math.max(tr, 1);\n                if (n >= tn) {\n                    break;\n                }\n                num++;\n            }\n            return num;\n        },\n        /**\n         * 背景データ追加\n         *\n         * @param data\n         */\n        _addScheduleBgData: function (data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = $('<div class=\"sc_bgBar\"><span class=\"text\"></span></div>');\n            // var stext = element.formatTime(data.start);\n            // var etext = element.formatTime(data.end);\n            // var snum = element._getScheduleCount(data.timeline);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: 0,\n                width: ((et - st) * setting.widthTimeX),\n                height: $element.find('.sc_main .timeline').eq(data.timeline).height()\n            });\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            $element.find('.sc_main .timeline').eq(data.timeline).append($bar);\n        },\n        /**\n         * スケジュール追加\n         *\n         * @param timeline\n         * @param data\n         * @returns {number}\n         */\n        _addScheduleData: function (timeline, data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = $('<div class=\"sc_bar\"><span class=\"head\"><span class=\"time\"></span></span><span class=\"text\"></span></div>');\n            var stext = methods.formatTime(data.start);\n            var etext = methods.formatTime(data.end);\n            var snum = methods._getScheduleCount.apply(element, [data.timeline]);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: ((snum * setting.timeLineY) + setting.timeLinePaddingTop),\n                width: ((et - st) * setting.widthTimeX),\n                height: (setting.timeLineY)\n            });\n            $bar.find('.time').text(stext + '-' + etext);\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            var $row = $element.find('.sc_main .timeline').eq(timeline);\n            $row.append($bar);\n            // データの追加\n            scheduleData.push(data);\n            // コールバックがセットされていたら呼出\n            if (setting.onAppendSchedule) {\n                setting.onAppendSchedule($bar, data);\n            }\n            // key\n            var key = scheduleData.length - 1;\n            $bar.data('sc_key', key);\n\n            $bar.bind('mouseup', function () {\n                // コールバックがセットされていたら呼出\n                if (setting.onClick) {\n                    if ($(this).data('dragCheck') !== true && $(this).data('resizeCheck') !== true) {\n                        var node = $(this);\n                        var scKey = node.data('sc_key');\n                        setting.onClick(node, scheduleData[scKey]);\n                    }\n                }\n            });\n\n            var $node = $element.find('.sc_bar');\n            // move node.\n            $node.draggable({\n                grid: [setting.widthTimeX, 1],\n                containment: '.sc_main',\n                helper: 'original',\n                start: function (event, ui) {\n                    var node = {};\n                    node.node = this;\n                    node.offsetTop = ui.position.top;\n                    node.offsetLeft = ui.position.left;\n                    node.currentTop = ui.position.top;\n                    node.currentLeft = ui.position.left;\n                    node.timeline = methods._getTimeLineNumber.apply(element, [ui.position.top]);\n                    node.nowTimeline = node.timeline;\n                    currentNode = node;\n                },\n                drag: function (event, ui) {\n                    $(this).data('dragCheck', true);\n                    if (!currentNode) {\n                        return false;\n                    }\n                    var $moveNode = $(this);\n                    var scKey = $moveNode.data('sc_key');\n                    // var originalTop = ui.originalPosition.top;\n                    // var originalLeft = ui.originalPosition.left;\n                    // var positionTop = ui.position.top;\n                    // var positionLeft = ui.position.left;\n                    var timelineNum = methods._getTimeLineNumber.apply(element, [ui.position.top]);\n                    // 位置の修正\n                    // ui.position.top = Math.floor(ui.position.top / setting.timeLineY) * setting.timeLineY;\n                    // ui.position.top = element._getScheduleCount(timelineNum) * setting.timeLineY;\n                    ui.position.left = Math.floor(ui.position.left / setting.widthTimeX) * setting.widthTimeX;\n\n\n                    // $moveNode.find(\".text\").text(timelineNum+\" \"+(element._getScheduleCount(timelineNum) + 1));\n                    if (currentNode.nowTimeline !== timelineNum) {\n                        // 高さの調節\n                        // element._resizeRow(currentNode[\"nowTimeline\"],element._getScheduleCount(currentNode[\"nowTimeline\"]));\n                        // element._resizeRow(timelineNum,element._getScheduleCount(timelineNum) + 1);\n                        // 現在のタイムライン\n                        currentNode.nowTimeline = timelineNum;\n                        // } else {\n                        // ui.position.top = currentNode[\"currentTop\"];\n                    }\n                    currentNode.currentTop = ui.position.top;\n                    currentNode.currentLeft = ui.position.left;\n                    // テキスト変更\n                    methods._rewriteBarText.apply(element, [$moveNode, scheduleData[scKey]]);\n                    return true;\n                },\n                // 要素の移動が終った後の処理\n                stop: function () {\n                    $(this).data('dragCheck', false);\n                    currentNode = null;\n\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    var x = node.position().left;\n                    // var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[scKey].end - scheduleData[scKey].start));\n\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n                    // コールバックがセットされていたら呼出\n                    if (setting.onChange) {\n                        setting.onChange(node, scheduleData[scKey]);\n                    }\n                }\n            });\n            $node.resizable({\n                handles: 'e',\n                grid: [setting.widthTimeX, setting.timeLineY],\n                minWidth: setting.widthTimeX,\n                start: function () {\n                    var node = $(this);\n                    node.data('resizeCheck', true);\n                },\n                // 要素の移動が終った後の処理\n                stop: function () {\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    var x = node.position().left;\n                    var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var timelineNum = scheduleData[scKey].timeline;\n\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n\n                    // 高さ調整\n                    methods._resetBarPosition.apply(element, [timelineNum]);\n                    // テキスト変更\n                    methods._rewriteBarText.apply(element, [node, scheduleData[scKey]]);\n\n                    node.data('resizeCheck', false);\n                    // コールバックがセットされていたら呼出\n                    if (setting.onChange) {\n                        setting.onChange(node, scheduleData[scKey]);\n                    }\n                }\n            });\n            if (setting.draggable === false) {\n                $node.draggable('disable');\n            }\n            if (setting.resizable === false) {\n                $node.resizable('disable');\n            }\n            return key;\n        },\n        /**\n         * スケジュール数の取得\n         *\n         * @param {number} n row number\n         * @returns {number}\n         */\n        _getScheduleCount: function (n) {\n            var num = 0;\n            for (var i in scheduleData) {\n                if (scheduleData[i].timeline === n) {\n                    num++;\n                }\n            }\n            return num;\n        },\n        /**\n         * add rows\n         *\n         * @param timeline\n         * @param row\n         */\n        _addRow: function (timeline, row) {\n            var title = row.title;\n            var id = $element.find('.sc_main .timeline').length;\n\n            var html;\n\n            html = '';\n            html += '<div class=\"timeline\"><span>' + title + '</span></div>';\n            var $data = $(html);\n            // event call\n            if (setting.onInitRow) {\n                setting.onInitRow($data, row);\n            }\n            $element.find('.sc_data_scroll').append($data);\n\n            html = '';\n            html += '<div class=\"timeline\"></div>';\n            var $timeline = $(html);\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                var $tl = $('<div class=\"tl\"></div>');\n                $tl.width(setting.widthTimeX - setting.timeBorder);\n\n                $tl.data('time', methods.formatTime(t));\n                $tl.data('timeline', timeline);\n                $timeline.append($tl);\n            }\n            // クリックイベント\n            // left click\n            $timeline.find('.tl').click(function () {\n                // element._moveSchedules($(this).data('timeline'), $(this), setting.bundleMoveWidth);\n                if (setting.onScheduleClick) {\n                    setting.onScheduleClick(this, $(this).data('time'), $(this).data('timeline'), timelineData[$(this).data('timeline')]);\n                }\n            });\n            // right click\n            $timeline.find('.tl').on('contextmenu', function () {\n                // element._moveSchedules($(this).data('timeline'), $(this), -1 * setting.bundleMoveWidth);\n                if (setting.onScheduleClick) {\n                    setting.onScheduleClick(this, $(this).data('time'), $(this).data('timeline'), timelineData[$(this).data('timeline')]);\n                }\n                return false;\n            });\n\n            $element.find('.sc_main').append($timeline);\n\n            timelineData[timeline] = row;\n\n            if (row.class && (row.class !== '')) {\n                $element.find('.sc_data .timeline').eq(id).addClass(row.class);\n                $element.find('.sc_main .timeline').eq(id).addClass(row.class);\n            }\n            // スケジュールタイムライン\n            if (row.schedule) {\n                for (var i in row.schedule) {\n                    var bdata = row.schedule[i];\n                    var s = methods.calcStringTime(bdata.start);\n                    var e = methods.calcStringTime(bdata.end);\n\n                    var data = {};\n                    data.start = s;\n                    data.end = e;\n                    if (bdata.text) {\n                        data.text = bdata.text;\n                    }\n                    data.timeline = i;\n                    data.data = {};\n                    if (bdata.data) {\n                        data.data = bdata.data;\n                    }\n                    methods._addScheduleData.apply(element, [id, data]);\n                }\n            }\n            // 高さの調整\n            methods._resetBarPosition.apply(element, [id]);\n            $element.find('.sc_main .timeline').eq(id).droppable({\n                accept: '.sc_bar',\n                drop: function (ev, ui) {\n                    var node = ui.draggable;\n                    var scKey = node.data('sc_key');\n                    var nowTimelineNum = scheduleData[scKey].timeline;\n                    var timelineNum = $element.find('.sc_main .timeline').index(this);\n                    // タイムラインの変更\n                    scheduleData[scKey].timeline = timelineNum;\n                    node.appendTo(this);\n                    // 高さ調整\n                    methods._resetBarPosition.apply(element, [nowTimelineNum]);\n                    methods._resetBarPosition.apply(element, [timelineNum]);\n                }\n            });\n            // コールバックがセットされていたら呼出\n            if (setting.onAppendRow) {\n                $element.find('.sc_main .timeline').eq(id).find('.sc_bar').each(function () {\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    setting.onAppendRow(node, scheduleData[scKey]);\n                });\n            }\n        },\n        /**\n         * テキストの変更\n         *\n         * @param node\n         * @param data\n         */\n        _rewriteBarText: function (node, data) {\n            var x = node.position().left;\n            // var w = node.width();\n            var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n            // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n            var end = start + (data.end - data.start);\n            var html = methods.formatTime(start) + '-' + methods.formatTime(end);\n            $(node).find('.time').html(html);\n        },\n        /**\n         *\n         * @param n\n         */\n        _resetBarPosition: function (n) {\n            // 要素の並び替え\n            var $barList = $element.find('.sc_main .timeline').eq(n).find('.sc_bar');\n            var codes = [];\n            var check = [];\n            var h = 0;\n            var $e1;\n            var $e2;\n            var c1;\n            var c2;\n            var s1;\n            var s2;\n            var e1;\n            var e2;\n            var i;\n            for (i = 0; i < $barList.length; i++) {\n                codes[i] = {\n                    code: i,\n                    x: $($barList[i]).position().left\n                };\n            }\n            // ソート\n            codes.sort(function (a, b) {\n                if (a.x < b.x) {\n                    return -1;\n                }\n                if (a.x > b.x) {\n                    return 1;\n                }\n                return 0;\n            });\n            for (i = 0; i < codes.length; i++) {\n                c1 = codes[i].code;\n                $e1 = $($barList[c1]);\n                for (h = 0; h < check.length; h++) {\n                    var next = false;\n                    for (var j = 0; j < check[h].length; j++) {\n                        c2 = check[h][j];\n                        $e2 = $($barList[c2]);\n\n                        s1 = $e1.position().left;\n                        e1 = $e1.position().left + $e1.width();\n                        s2 = $e2.position().left;\n                        e2 = $e2.position().left + $e2.width();\n                        if (s1 < e2 && e1 > s2) {\n                            next = true;\n                            continue;\n                        }\n                    }\n                    if (!next) {\n                        break;\n                    }\n                }\n                if (!check[h]) {\n                    check[h] = [];\n                }\n                $e1.css({\n                    top: ((h * setting.timeLineY) + setting.timeLinePaddingTop)\n                });\n                check[h][check[h].length] = c1;\n            }\n            // 高さの調整\n            methods._resizeRow.apply(this, [n, check.length]);\n        },\n        /**\n         *\n         * @param n\n         * @param height\n         */\n        _resizeRow: function (n, height) {\n            var h = Math.max(height, 1);\n            $element.find('.sc_data .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n            $element.find('.sc_main .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n\n            $element.find('.sc_main .timeline').eq(n).find('.sc_bgBar').each(function () {\n                $(this).height($(this).closest('.timeline').height());\n            });\n\n            $element.find('.sc_data').height($element.find('.sc_main_box').height());\n        },\n        /**\n         * resizeWindow\n         */\n        _resizeWindow: function () {\n            var scWidth = $element.width();\n            var scMainWidth = scWidth - setting.dataWidth - (setting.verticalScrollbar);\n            var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            $element.find('.sc_header_cell').width(setting.dataWidth);\n            $element.find('.sc_data,.sc_data_scroll').width(setting.dataWidth);\n            $element.find('.sc_header').width(scMainWidth);\n            $element.find('.sc_main_box').width(scMainWidth);\n            $element.find('.sc_header_scroll').width(setting.widthTimeX * cellNum);\n            $element.find('.sc_main_scroll').width(setting.widthTimeX * cellNum);\n        },\n        /**\n         * move all cells of the right of the specified time line cell\n         *\n         * @param timeline\n         * @param baseTimeLineCell\n         * @param moveWidth\n         */\n        _moveSchedules: function (timeline, baseTimeLineCell, moveWidth) {\n            var $barList = $element.find('.sc_main .timeline').eq(timeline).find('.sc_bar');\n            for (var i = 0; i < $barList.length; i++) {\n                var $bar = $($barList[i]);\n                if (baseTimeLineCell.position().left <= $bar.position().left) {\n                    var v1 = $bar.position().left + setting.widthTimeX * moveWidth;\n                    var v2 = Math.floor((tableEndTime - tableStartTime) / setting.widthTime) * setting.widthTimeX - $bar.width();\n                    $bar.css({\n                        left: Math.max(0, Math.min(v1, v2))\n                    });\n\n                    var scKey = $bar.data('sc_key');\n                    var start = tableStartTime + (Math.floor($bar.position().left / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[scKey].end - scheduleData[scKey].start));\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n                    methods._rewriteBarText.apply(element, [$bar, scheduleData[scKey]]);\n\n                    // if setting\n                    if (setting.onChange) {\n                        setting.onChange($bar, scheduleData[scKey]);\n                    }\n                }\n            }\n            methods._resetBarPosition.apply(element, [timeline]);\n        },\n        /**\n         * initialize\n         */\n        init: function (options) {\n            $element = $(this);\n            element = (this);\n            setting = $.extend({\n                className: 'jq-schedule',\n                rows: {},\n                startTime: '07:00',\n                endTime: '19:30',\n                widthTimeX: 25, // 1cell辺りの幅(px)\n                widthTime: 600, // 区切り時間(秒)\n                timeLineY: 50, // timeline height(px)\n                timeLineBorder: 1, // timeline height border\n                timeBorder: 1, // border width\n                timeLinePaddingTop: 0,\n                timeLinePaddingBottom: 0,\n                headTimeBorder: 1, // time border width\n                dataWidth: 160, // data width\n                verticalScrollbar: 0, // vertical scrollbar width\n                bundleMoveWidth: 1, // width to move all schedules to the right of the clicked time cell\n                draggable: true,\n                resizable: true,\n                // event\n                onInitRow: null,\n                onChange: null,\n                onClick: null,\n                onAppendRow: null,\n                onAppendSchedule: null,\n                onScheduleClick: null\n            }, options);\n            tableStartTime = methods.calcStringTime(setting.startTime);\n            tableEndTime = methods.calcStringTime(setting.endTime);\n            tableStartTime -= (tableStartTime % setting.widthTime);\n            tableEndTime -= (tableEndTime % setting.widthTime);\n\n            var html = '' +\n                '<div class=\"sc_menu\">' + '\\n' +\n                '<div class=\"sc_header_cell\"><span>&nbsp;</span></div>' + '\\n' +\n                '<div class=\"sc_header\">' + '\\n' +\n                '<div class=\"sc_header_scroll\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<br class=\"clear\" />' + '\\n' +\n                '</div>' + '\\n' +\n                '<div class=\"sc_wrapper\">' + '\\n' +\n                '<div class=\"sc_data\">' + '\\n' +\n                '<div class=\"sc_data_scroll\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<div class=\"sc_main_box\">' + '\\n' +\n                '<div class=\"sc_main_scroll\">' + '\\n' +\n                '<div class=\"sc_main\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<br class=\"clear\" />' + '\\n' +\n                '</div>';\n\n            $element.append(html);\n            $element.addClass(setting.className);\n\n            $element.find('.sc_main_box').scroll(function () {\n                $element.find('.sc_data_scroll').css('top', $(this).scrollTop() * -1);\n                $element.find('.sc_header_scroll').css('left', $(this).scrollLeft() * -1);\n            });\n            // add time cell\n            // var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            var beforeTime = -1;\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                if (\n                    (beforeTime < 0)\n                    || (Math.floor(beforeTime / 3600) !== Math.floor(t / 3600))) {\n                    html = '';\n                    html += '<div class=\"sc_time\">' + methods.formatTime(t) + '</div>';\n                    var $time = $(html);\n                    var cn = Number(\n                        Math.min((Math.ceil((t + setting.widthTime) / 3600) * 3600), tableEndTime) -\n                        t\n                    );\n                    var cellNum = Math.floor(cn / setting.widthTime);\n                    $time.width((cellNum * setting.widthTimeX) - setting.headTimeBorder);\n                    $element.find('.sc_header_scroll').append($time);\n\n                    beforeTime = t;\n                }\n            }\n\n            $(window).resize(function () {\n                methods._resizeWindow.apply(element);\n            }).trigger('resize');\n\n            // addrow\n            for (var i in setting.rows) {\n                methods._addRow.apply(this, [i, setting.rows[i]]);\n            }\n            return this;\n        }\n    };\n    $.fn.timeSchedule = function (method) {\n        // Method calling logic\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('Method ' + method + ' does not exist on jQuery.timeSchedule');\n        }\n        return this;\n    };\n}(jQuery));\n"]}