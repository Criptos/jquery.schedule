{"version":3,"sources":["js/jq.schedule.js"],"names":["$","$element","element","setting","scheduleData","timelineData","currentNode","tableStartTime","tableEndTime","methods","calcStringTime","string","slice","split","Number","formatTime","min","i","data","schedule","d","timeline","push","resetData","find","remove","_resizeRow","apply","this","addSchedule","start","end","text","_addScheduleData","_resetBarPosition","addRow","_addRow","resetRowData","height","setRows","setDraggable","enable","e","draggable","setResizable","resizable","_getTimeLineNumber","top","num","n","tn","Math","ceil","timeLineY","timeLinePaddingTop","timeLinePaddingBottom","rows","r","tr","length","max","_addScheduleBgData","st","widthTime","et","floor","$bar","css","left","widthTimeX","width","eq","class","addClass","append","stext","etext","snum","_getScheduleCount","onAppendSchedule","key","bind","onClick","node","scKey","$node","grid","containment","helper","event","ui","offsetTop","position","offsetLeft","currentTop","currentLeft","nowTimeline","drag","$moveNode","timelineNum","_rewriteBarText","stop","x","onChange","handles","minWidth","resize","ev","size","w","outerWidth","row","html","title","id","$data","onInitRow","$timeline","t","$tl","click","onScheduleClick","on","bdata","s","droppable","accept","drop","nowTimelineNum","index","appendTo","onAppendRow","each","$e1","$e2","c1","c2","s1","s2","e1","$barList","codes","check","h","code","sort","a","b","next","j","timeLineBorder","closest","_resizeWindow","scMainWidth","dataWidth","cellNum","_moveSchedules","baseTimeLineCell","moveWidth","v1","v2","init","options","extend","className","startTime","endTime","timeBorder","headTimeBorder","verticalScrollbar","bundleMoveWidth","scroll","scrollTop","scrollLeft","beforeTime","$time","cn","window","trigger","fn","timeSchedule","method","Array","prototype","call","arguments","error","jQuery"],"mappings":"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","file":"jq.schedule.min.js","sourcesContent":["(function ($) {\n    'use strict';\n\n    var setting = null;\n    var scheduleData = [];\n    var timelineData = [];\n    var $element, element;\n    var currentNode = null;\n    var tableStartTime = 0;\n    var tableEndTime = 0;\n\n    var methods = {\n        /**\n         *\n         * @param {string} string\n         * @returns {number}\n         */\n        calcStringTime: function (string) {\n            var slice = string.split(':');\n            var h = Number(slice[0]) * 60 * 60;\n            var i = Number(slice[1]) * 60;\n            var min = h + i;\n            return min;\n        },\n        /**\n         *\n         * @param {number} min\n         * @returns {string}\n         */\n        formatTime: function (min) {\n            var h = '' + (min / 36000 | 0) + (min / 3600 % 10 | 0);\n            var i = '' + (min % 3600 / 600 | 0) + (min % 3600 / 60 % 10 | 0);\n            return h + ':' + i;\n        },\n\n        /**\n         * get scheduleData\n         * @returns {any[]}\n         */\n        scheduleData: function () {\n            return scheduleData;\n        },\n        /**\n         * get timelineData\n         * @returns {any[]}\n         */\n        timelineData: function () {\n            var data = [];\n            var i;\n            for (i in timelineData) {\n                data[i] = timelineData[i];\n                data[i].schedule = [];\n            }\n            for (i in scheduleData) {\n                var d = scheduleData[i];\n                if (typeof d.timeline === 'undefined') {\n                    continue;\n                }\n                if (typeof data[d.timeline] === 'undefined') {\n                    continue;\n                }\n                data[d.timeline].schedule.push(d);\n            }\n            return data;\n        },\n        /**\n         * reset data\n         */\n        resetData: function () {\n            scheduleData = [];\n            $element.find('.sc_bar').remove();\n            for (var i in timelineData) {\n                timelineData[i].schedule = [];\n                methods._resizeRow.apply(this, [i, 0]);\n            }\n            return this;\n        },\n        /**\n         * add schedule data\n         *\n         * @param {number} timeline\n         * @param {object} data\n         * @returns {methods}\n         */\n        addSchedule: function (timeline, data) {\n            var d = {\n                start: methods.calcStringTime(data.start),\n                end: methods.calcStringTime(data.end),\n                text: data.text,\n                timeline: timeline\n            };\n            if (data.data) {\n                d.data = data.data;\n            }\n            methods._addScheduleData.apply(this, [timeline, d]);\n            methods._resetBarPosition.apply(this, [timeline]);\n            return this;\n        },\n        /**\n         * add schedule data\n         *\n         * @param {number} timeline\n         * @param {object} data\n         * @returns {methods}\n         */\n        addRow: function (timeline, data) {\n            methods._addRow.apply(this, [timeline, data]);\n            return this;\n        },\n        /**\n         * clear row\n         *\n         * @returns {methods}\n         */\n        resetRowData: function () {\n            scheduleData = [];\n            timelineData = [];\n            $element.find('.sc_bar').remove();\n            $element.find('.timeline').remove();\n            $element.find('.sc_data').height(0);\n            return this;\n        },\n        /**\n         * clear row\n         *\n         * @param {object} data\n         * @returns {methods}\n         */\n        setRows: function (data) {\n            methods.resetRowData.apply(this, []);\n            for (var timeline in data) {\n                methods.addRow.apply(this, [timeline, data[timeline]]);\n            }\n            return this;\n        },\n        /**\n         * switch draggable\n         * @param {boolean} enable\n         */\n        setDraggable: function (enable) {\n            var e = enable ? true : false;\n            if (e !== setting.draggable) {\n                setting.draggable = e;\n                if (e) {\n                    $element.find('.sc_bar').draggable('enable');\n                } else {\n                    $element.find('.sc_bar').draggable('disable');\n                }\n            }\n        },\n        /**\n         * switch resizable\n         * @param {boolean} enable\n         */\n        setResizable: function (enable) {\n            var e = enable ? true : false;\n            if (e !== setting.resizable) {\n                setting.resizable = e;\n                if (e) {\n                    $element.find('.sc_bar').resizable('enable');\n                } else {\n                    $element.find('.sc_bar').resizable('disable');\n                }\n            }\n        },\n        /**\n         * 現在のタイムライン番号を取得\n         *\n         * @param top\n         * @returns {number}\n         */\n        _getTimeLineNumber: function (top) {\n            var num = 0;\n            var n = 0;\n            var tn = Math.ceil(top / (setting.timeLineY + setting.timeLinePaddingTop + setting.timeLinePaddingBottom));\n            for (var i in setting.rows) {\n                var r = setting.rows[i];\n                var tr = 0;\n                if (typeof r.schedule === 'object') {\n                    tr = r.schedule.length;\n                }\n                if (currentNode && currentNode.timeline) {\n                    tr++;\n                }\n                n += Math.max(tr, 1);\n                if (n >= tn) {\n                    break;\n                }\n                num++;\n            }\n            return num;\n        },\n        /**\n         * 背景データ追加\n         *\n         * @param data\n         */\n        _addScheduleBgData: function (data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = $('<div class=\"sc_bgBar\"><span class=\"text\"></span></div>');\n            // var stext = element.formatTime(data.start);\n            // var etext = element.formatTime(data.end);\n            // var snum = element._getScheduleCount(data.timeline);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: 0,\n                width: ((et - st) * setting.widthTimeX),\n                height: $element.find('.sc_main .timeline').eq(data.timeline).height()\n            });\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            $element.find('.sc_main .timeline').eq(data.timeline).append($bar);\n        },\n        /**\n         * スケジュール追加\n         *\n         * @param timeline\n         * @param data\n         * @returns {number}\n         */\n        _addScheduleData: function (timeline, data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = $('<div class=\"sc_bar\"><span class=\"head\"><span class=\"time\"></span></span><span class=\"text\"></span></div>');\n            var stext = methods.formatTime(data.start);\n            var etext = methods.formatTime(data.end);\n            var snum = methods._getScheduleCount.apply(element, [data.timeline]);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: ((snum * setting.timeLineY) + setting.timeLinePaddingTop),\n                width: ((et - st) * setting.widthTimeX),\n                height: (setting.timeLineY)\n            });\n            $bar.find('.time').text(stext + '-' + etext);\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            var $row = $element.find('.sc_main .timeline').eq(timeline);\n            $row.append($bar);\n            // データの追加\n            scheduleData.push(data);\n            // コールバックがセットされていたら呼出\n            if (setting.onAppendSchedule) {\n                setting.onAppendSchedule($bar, data);\n            }\n            // key\n            var key = scheduleData.length - 1;\n            $bar.data('sc_key', key);\n\n            $bar.bind('mouseup', function () {\n                // コールバックがセットされていたら呼出\n                if (setting.onClick) {\n                    if ($(this).data('dragCheck') !== true && $(this).data('resizeCheck') !== true) {\n                        var node = $(this);\n                        var scKey = node.data('sc_key');\n                        setting.onClick(node, scheduleData[scKey]);\n                    }\n                }\n            });\n\n            var $node = $element.find('.sc_bar');\n            // move node.\n            $node.draggable({\n                grid: [setting.widthTimeX, 1],\n                containment: '.sc_main',\n                helper: 'original',\n                start: function (event, ui) {\n                    var node = {};\n                    node.node = this;\n                    node.offsetTop = ui.position.top;\n                    node.offsetLeft = ui.position.left;\n                    node.currentTop = ui.position.top;\n                    node.currentLeft = ui.position.left;\n                    node.timeline = methods._getTimeLineNumber.apply(element, [ui.position.top]);\n                    node.nowTimeline = node.timeline;\n                    currentNode = node;\n                },\n                drag: function (event, ui) {\n                    $(this).data('dragCheck', true);\n                    if (!currentNode) {\n                        return false;\n                    }\n                    var $moveNode = $(this);\n                    var scKey = $moveNode.data('sc_key');\n                    // var originalTop = ui.originalPosition.top;\n                    // var originalLeft = ui.originalPosition.left;\n                    // var positionTop = ui.position.top;\n                    // var positionLeft = ui.position.left;\n                    var timelineNum = methods._getTimeLineNumber.apply(element, [ui.position.top]);\n                    // 位置の修正\n                    // ui.position.top = Math.floor(ui.position.top / setting.timeLineY) * setting.timeLineY;\n                    // ui.position.top = element._getScheduleCount(timelineNum) * setting.timeLineY;\n                    ui.position.left = Math.floor(ui.position.left / setting.widthTimeX) * setting.widthTimeX;\n\n\n                    // $moveNode.find(\".text\").text(timelineNum+\" \"+(element._getScheduleCount(timelineNum) + 1));\n                    if (currentNode.nowTimeline !== timelineNum) {\n                        // 高さの調節\n                        // element._resizeRow(currentNode[\"nowTimeline\"],element._getScheduleCount(currentNode[\"nowTimeline\"]));\n                        // element._resizeRow(timelineNum,element._getScheduleCount(timelineNum) + 1);\n                        // 現在のタイムライン\n                        currentNode.nowTimeline = timelineNum;\n                        // } else {\n                        // ui.position.top = currentNode[\"currentTop\"];\n                    }\n                    currentNode.currentTop = ui.position.top;\n                    currentNode.currentLeft = ui.position.left;\n                    // テキスト変更\n                    methods._rewriteBarText.apply(element, [$moveNode, scheduleData[scKey]]);\n                    return true;\n                },\n                // 要素の移動が終った後の処理\n                stop: function () {\n                    $(this).data('dragCheck', false);\n                    currentNode = null;\n\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    var x = node.position().left;\n                    // var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[scKey].end - scheduleData[scKey].start));\n\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n                    // コールバックがセットされていたら呼出\n                    if (setting.onChange) {\n                        setting.onChange(node, scheduleData[scKey]);\n                    }\n                }\n            });\n            $node.resizable({\n                handles: 'e',\n                grid: [setting.widthTimeX, setting.timeLineY],\n                minWidth: setting.widthTimeX,\n                start: function () {\n                    var node = $(this);\n                    node.data('resizeCheck', true);\n                },\n                resize: function (ev, ui) {\n                    // box-sizing: border-box; に対応\n                    ui.element.height(ui.size.height);\n                    ui.element.width(ui.size.width);\n                },\n                // 要素の移動が終った後の処理\n                stop: function () {\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    var x = node.position().left;\n                    var w = node.outerWidth();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var timelineNum = scheduleData[scKey].timeline;\n\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n\n                    // 高さ調整\n                    methods._resetBarPosition.apply(element, [timelineNum]);\n                    // テキスト変更\n                    methods._rewriteBarText.apply(element, [node, scheduleData[scKey]]);\n\n                    node.data('resizeCheck', false);\n                    // コールバックがセットされていたら呼出\n                    if (setting.onChange) {\n                        setting.onChange(node, scheduleData[scKey]);\n                    }\n                }\n            });\n            if (setting.draggable === false) {\n                $node.draggable('disable');\n            }\n            if (setting.resizable === false) {\n                $node.resizable('disable');\n            }\n            return key;\n        },\n        /**\n         * スケジュール数の取得\n         *\n         * @param {number} n row number\n         * @returns {number}\n         */\n        _getScheduleCount: function (n) {\n            var num = 0;\n            for (var i in scheduleData) {\n                if (scheduleData[i].timeline === n) {\n                    num++;\n                }\n            }\n            return num;\n        },\n        /**\n         * add rows\n         *\n         * @param timeline\n         * @param row\n         */\n        _addRow: function (timeline, row) {\n            var title = row.title;\n            var id = $element.find('.sc_main .timeline').length;\n\n            var html;\n\n            html = '';\n            html += '<div class=\"timeline\"><span>' + title + '</span></div>';\n            var $data = $(html);\n            // event call\n            if (setting.onInitRow) {\n                setting.onInitRow($data, row);\n            }\n            $element.find('.sc_data_scroll').append($data);\n\n            html = '';\n            html += '<div class=\"timeline\"></div>';\n            var $timeline = $(html);\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                var $tl = $('<div class=\"tl\"></div>');\n                $tl.outerWidth(setting.widthTimeX);\n\n                $tl.data('time', methods.formatTime(t));\n                $tl.data('timeline', timeline);\n                $timeline.append($tl);\n            }\n            // クリックイベント\n            // left click\n            $timeline.find('.tl').click(function () {\n                // element._moveSchedules($(this).data('timeline'), $(this), setting.bundleMoveWidth);\n                if (setting.onScheduleClick) {\n                    setting.onScheduleClick(this, $(this).data('time'), $(this).data('timeline'), timelineData[$(this).data('timeline')]);\n                }\n            });\n            // right click\n            $timeline.find('.tl').on('contextmenu', function () {\n                // element._moveSchedules($(this).data('timeline'), $(this), -1 * setting.bundleMoveWidth);\n                if (setting.onScheduleClick) {\n                    setting.onScheduleClick(this, $(this).data('time'), $(this).data('timeline'), timelineData[$(this).data('timeline')]);\n                }\n                return false;\n            });\n\n            $element.find('.sc_main').append($timeline);\n\n            timelineData[timeline] = row;\n\n            if (row.class && (row.class !== '')) {\n                $element.find('.sc_data .timeline').eq(id).addClass(row.class);\n                $element.find('.sc_main .timeline').eq(id).addClass(row.class);\n            }\n            // スケジュールタイムライン\n            if (row.schedule) {\n                for (var i in row.schedule) {\n                    var bdata = row.schedule[i];\n                    var s = methods.calcStringTime(bdata.start);\n                    var e = methods.calcStringTime(bdata.end);\n\n                    var data = {};\n                    data.start = s;\n                    data.end = e;\n                    if (bdata.text) {\n                        data.text = bdata.text;\n                    }\n                    data.timeline = i;\n                    data.data = {};\n                    if (bdata.data) {\n                        data.data = bdata.data;\n                    }\n                    methods._addScheduleData.apply(element, [id, data]);\n                }\n            }\n            // 高さの調整\n            methods._resetBarPosition.apply(element, [id]);\n            $element.find('.sc_main .timeline').eq(id).droppable({\n                accept: '.sc_bar',\n                drop: function (ev, ui) {\n                    var node = ui.draggable;\n                    var scKey = node.data('sc_key');\n                    var nowTimelineNum = scheduleData[scKey].timeline;\n                    var timelineNum = $element.find('.sc_main .timeline').index(this);\n                    // タイムラインの変更\n                    scheduleData[scKey].timeline = timelineNum;\n                    node.appendTo(this);\n                    // 高さ調整\n                    methods._resetBarPosition.apply(element, [nowTimelineNum]);\n                    methods._resetBarPosition.apply(element, [timelineNum]);\n                }\n            });\n            // コールバックがセットされていたら呼出\n            if (setting.onAppendRow) {\n                $element.find('.sc_main .timeline').eq(id).find('.sc_bar').each(function () {\n                    var node = $(this);\n                    var scKey = node.data('sc_key');\n                    setting.onAppendRow(node, scheduleData[scKey]);\n                });\n            }\n        },\n        /**\n         * テキストの変更\n         *\n         * @param node\n         * @param data\n         */\n        _rewriteBarText: function (node, data) {\n            var x = node.position().left;\n            // var w = node.width();\n            var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n            // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n            var end = start + (data.end - data.start);\n            var html = methods.formatTime(start) + '-' + methods.formatTime(end);\n            $(node).find('.time').html(html);\n        },\n        /**\n         *\n         * @param n\n         */\n        _resetBarPosition: function (n) {\n            // 要素の並び替え\n            var $barList = $element.find('.sc_main .timeline').eq(n).find('.sc_bar');\n            var codes = [];\n            var check = [];\n            var h = 0;\n            var $e1;\n            var $e2;\n            var c1;\n            var c2;\n            var s1;\n            var s2;\n            var e1;\n            var e2;\n            var i;\n            for (i = 0; i < $barList.length; i++) {\n                codes[i] = {\n                    code: i,\n                    x: $($barList[i]).position().left\n                };\n            }\n            // ソート\n            codes.sort(function (a, b) {\n                if (a.x < b.x) {\n                    return -1;\n                }\n                if (a.x > b.x) {\n                    return 1;\n                }\n                return 0;\n            });\n            for (i = 0; i < codes.length; i++) {\n                c1 = codes[i].code;\n                $e1 = $($barList[c1]);\n                for (h = 0; h < check.length; h++) {\n                    var next = false;\n                    for (var j = 0; j < check[h].length; j++) {\n                        c2 = check[h][j];\n                        $e2 = $($barList[c2]);\n\n                        s1 = $e1.position().left;\n                        e1 = $e1.position().left + $e1.outerWidth();\n                        s2 = $e2.position().left;\n                        e2 = $e2.position().left + $e2.outerWidth();\n                        if (s1 < e2 && e1 > s2) {\n                            next = true;\n                            continue;\n                        }\n                    }\n                    if (!next) {\n                        break;\n                    }\n                }\n                if (!check[h]) {\n                    check[h] = [];\n                }\n                $e1.css({\n                    top: ((h * setting.timeLineY) + setting.timeLinePaddingTop)\n                });\n                check[h][check[h].length] = c1;\n            }\n            // 高さの調整\n            methods._resizeRow.apply(this, [n, check.length]);\n        },\n        /**\n         *\n         * @param n\n         * @param height\n         */\n        _resizeRow: function (n, height) {\n            var h = Math.max(height, 1);\n            $element.find('.sc_data .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n            $element.find('.sc_main .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n\n            $element.find('.sc_main .timeline').eq(n).find('.sc_bgBar').each(function () {\n                $(this).height($(this).closest('.timeline').height());\n            });\n\n            $element.find('.sc_data').height($element.find('.sc_main_box').height());\n        },\n        /**\n         * resizeWindow\n         */\n        _resizeWindow: function () {\n            var scWidth = $element.width();\n            var scMainWidth = scWidth - setting.dataWidth - (setting.verticalScrollbar);\n            var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            $element.find('.sc_header_cell').width(setting.dataWidth);\n            $element.find('.sc_data,.sc_data_scroll').width(setting.dataWidth);\n            $element.find('.sc_header').width(scMainWidth);\n            $element.find('.sc_main_box').width(scMainWidth);\n            $element.find('.sc_header_scroll').width(setting.widthTimeX * cellNum);\n            $element.find('.sc_main_scroll').width(setting.widthTimeX * cellNum);\n        },\n        /**\n         * move all cells of the right of the specified time line cell\n         *\n         * @param timeline\n         * @param baseTimeLineCell\n         * @param moveWidth\n         */\n        _moveSchedules: function (timeline, baseTimeLineCell, moveWidth) {\n            var $barList = $element.find('.sc_main .timeline').eq(timeline).find('.sc_bar');\n            for (var i = 0; i < $barList.length; i++) {\n                var $bar = $($barList[i]);\n                if (baseTimeLineCell.position().left <= $bar.position().left) {\n                    var v1 = $bar.position().left + setting.widthTimeX * moveWidth;\n                    var v2 = Math.floor((tableEndTime - tableStartTime) / setting.widthTime) * setting.widthTimeX - $bar.outerWidth();\n                    $bar.css({\n                        left: Math.max(0, Math.min(v1, v2))\n                    });\n\n                    var scKey = $bar.data('sc_key');\n                    var start = tableStartTime + (Math.floor($bar.position().left / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[scKey].end - scheduleData[scKey].start));\n                    scheduleData[scKey].start = start;\n                    scheduleData[scKey].end = end;\n                    methods._rewriteBarText.apply(element, [$bar, scheduleData[scKey]]);\n\n                    // if setting\n                    if (setting.onChange) {\n                        setting.onChange($bar, scheduleData[scKey]);\n                    }\n                }\n            }\n            methods._resetBarPosition.apply(element, [timeline]);\n        },\n        /**\n         * initialize\n         */\n        init: function (options) {\n            $element = $(this);\n            element = (this);\n            setting = $.extend({\n                className: 'jq-schedule',\n                rows: {},\n                startTime: '07:00',\n                endTime: '19:30',\n                widthTimeX: 25, // 1cell辺りの幅(px)\n                widthTime: 600, // 区切り時間(秒)\n                timeLineY: 50, // timeline height(px)\n                timeLineBorder: 1, // timeline height border\n                timeBorder: 1, // border width\n                timeLinePaddingTop: 0,\n                timeLinePaddingBottom: 0,\n                headTimeBorder: 1, // time border width\n                dataWidth: 160, // data width\n                verticalScrollbar: 0, // vertical scrollbar width\n                bundleMoveWidth: 1, // width to move all schedules to the right of the clicked time cell\n                draggable: true,\n                resizable: true,\n                // event\n                onInitRow: null,\n                onChange: null,\n                onClick: null,\n                onAppendRow: null,\n                onAppendSchedule: null,\n                onScheduleClick: null\n            }, options);\n            tableStartTime = methods.calcStringTime(setting.startTime);\n            tableEndTime = methods.calcStringTime(setting.endTime);\n            tableStartTime -= (tableStartTime % setting.widthTime);\n            tableEndTime -= (tableEndTime % setting.widthTime);\n\n            var html = '' +\n                '<div class=\"sc_menu\">' + '\\n' +\n                '<div class=\"sc_header_cell\"><span>&nbsp;</span></div>' + '\\n' +\n                '<div class=\"sc_header\">' + '\\n' +\n                '<div class=\"sc_header_scroll\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<div class=\"sc_wrapper\">' + '\\n' +\n                '<div class=\"sc_data\">' + '\\n' +\n                '<div class=\"sc_data_scroll\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '<div class=\"sc_main_box\">' + '\\n' +\n                '<div class=\"sc_main_scroll\">' + '\\n' +\n                '<div class=\"sc_main\"></div>' + '\\n' +\n                '</div>' + '\\n' +\n                '</div>' + '\\n' +\n                '</div>';\n\n            $element.append(html);\n            $element.addClass(setting.className);\n\n            $element.find('.sc_main_box').scroll(function () {\n                $element.find('.sc_data_scroll').css('top', $(this).scrollTop() * -1);\n                $element.find('.sc_header_scroll').css('left', $(this).scrollLeft() * -1);\n            });\n            // add time cell\n            // var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            var beforeTime = -1;\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                if (\n                    (beforeTime < 0)\n                    || (Math.floor(beforeTime / 3600) !== Math.floor(t / 3600))) {\n                    html = '';\n                    html += '<div class=\"sc_time\">' + methods.formatTime(t) + '</div>';\n                    var $time = $(html);\n                    var cn = Number(\n                        Math.min((Math.ceil((t + setting.widthTime) / 3600) * 3600), tableEndTime) -\n                        t\n                    );\n                    var cellNum = Math.floor(cn / setting.widthTime);\n                    $time.width((cellNum * setting.widthTimeX));\n                    $element.find('.sc_header_scroll').append($time);\n\n                    beforeTime = t;\n                }\n            }\n\n            $(window).resize(function () {\n                methods._resizeWindow.apply(element);\n            }).trigger('resize');\n\n            // addrow\n            for (var i in setting.rows) {\n                methods._addRow.apply(this, [i, setting.rows[i]]);\n            }\n            return this;\n        }\n    };\n    $.fn.timeSchedule = function (method) {\n        // Method calling logic\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('Method ' + method + ' does not exist on jQuery.timeSchedule');\n        }\n        return this;\n    };\n}(jQuery));\n"]}