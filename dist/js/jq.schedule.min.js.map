{"version":3,"sources":["js/jq.schedule.js"],"names":["$","fn","timeSchedule","options","setting","extend","className","rows","startTime","endTime","widthTimeX","widthTime","timeLineY","timeLineBorder","timeBorder","timeLinePaddingTop","timeLinePaddingBottom","headTimeBorder","dataWidth","verticalScrollbar","bundleMoveWidth","init_data","change","click","append","time_click","debug","this","scheduleData","Array","timelineData","$element","element","currentNode","tableStartTime","tableEndTime","calcStringTime","string","slice","split","Number","formatTime","min","getScheduleData","getTimelineData","getTimeLineNumber","top","num","n","tn","Math","ceil","i","r","tr","schedule","Object","length","timeline","max","addScheduleBgData","data","st","start","et","floor","end","$bar","jQuery","getScheduleCount","css","left","width","height","find","eq","text","class","addClass","addScheduleData","stext","etext","snum","push","key","bind","node","sc_key","$node","draggable","grid","containment","helper","event","ui","offsetTop","position","offsetLeft","currentTop","currentLeft","nowTimeline","drag","$moveNode","timelineNum","originalPosition","rewriteBarText","stop","x","resizable","handles","minWidth","w","resetBarPosition","addRow","row","html","title","id","$data","$timeline","t","$tl","moveSchedules","on","e","bdata","s","droppable","accept","drop","ev","nowTimelineNum","index","appendTo","each","timelineIndex","$bar_list","codes","code","sort","a","b","$e1","$e2","c1","c2","s1","e1","s2","check","h","next","j","resizeRow","closest","resizeWindow","sc_main_width","cell_num","baseTimeLineCell","moveWidth","init","scroll","scrollTop","scrollLeft","beforeTime","$time","cellNum","window","resize","trigger","d","setInterval"],"mappings":"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","file":"jq.schedule.min.js","sourcesContent":["(function ($) {\n    'use strict';\n\n    $.fn.timeSchedule = function (options) {\n        var defaults = {\n            className: 'jq-schedule',\n            rows: {},\n            startTime: '07:00',\n            endTime: '19:30',\n            widthTimeX: 25, // 1cell辺りの幅(px)\n            widthTime: 600, // 区切り時間(秒)\n            timeLineY: 50, // timeline height(px)\n            timeLineBorder: 1, // timeline height border\n            timeBorder: 1, // border width\n            timeLinePaddingTop: 0,\n            timeLinePaddingBottom: 0,\n            headTimeBorder: 1, // time border width\n            dataWidth: 160, // data width\n            verticalScrollbar: 0, // vertical scrollbar width\n            bundleMoveWidth: 1, // width to move all schedules to the right of the clicked time cell\n            // event\n            init_data: null,\n            change: null,\n            click: null,\n            append: null,\n            time_click: null,\n            debug: '' // debug selecter\n        };\n        var setting = $.extend(defaults, options);\n        this.setting = setting;\n        var scheduleData = new Array();\n        var timelineData = new Array();\n        var $element = $(this);\n        var element = (this);\n        var currentNode = null;\n        var tableStartTime = 0;\n        var tableEndTime = 0;\n\n        /**\n         *\n         * @param {string} string\n         * @returns {number}\n         */\n        this.calcStringTime = function (string) {\n            var slice = string.split(':');\n            var h = Number(slice[0]) * 60 * 60;\n            var i = Number(slice[1]) * 60;\n            var min = h + i;\n            return min;\n        };\n        /**\n         *\n         * @param {number} min\n         * @returns {string}\n         */\n        this.formatTime = function (min) {\n            var h = '' + (min / 36000 | 0) + (min / 3600 % 10 | 0);\n            var i = '' + (min % 3600 / 600 | 0) + (min % 3600 / 60 % 10 | 0);\n            var string = h + ':' + i;\n            return string;\n        };\n\n        /**\n         *\n         * @returns {any[]}\n         */\n        this.getScheduleData = function () {\n            return scheduleData;\n        };\n        /**\n         *\n         * @returns {any[]}\n         */\n        this.getTimelineData = function () {\n            return timelineData;\n        };\n        /**\n         * 現在のタイムライン番号を取得\n         *\n         * @param top\n         * @returns {number}\n         */\n        this.getTimeLineNumber = function (top) {\n            var num = 0;\n            var n = 0;\n            var tn = Math.ceil(top / (setting.timeLineY + setting.timeLinePaddingTop + setting.timeLinePaddingBottom));\n            for (var i in setting.rows) {\n                var r = setting.rows[i];\n                var tr = 0;\n                if (typeof r.schedule === Object) {\n                    tr = r.schedule.length;\n                }\n                if (currentNode && currentNode.timeline) {\n                    tr++;\n                }\n                n += Math.max(tr, 1);\n                if (n >= tn) {\n                    break;\n                }\n                num++;\n            }\n            return num;\n        };\n        /**\n         * 背景データ追加\n         *\n         * @param data\n         */\n        this.addScheduleBgData = function (data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = jQuery('<div class=\"sc_bgBar\"><span class=\"text\"></span></div>');\n            var stext = element.formatTime(data.start);\n            var etext = element.formatTime(data.end);\n            var snum = element.getScheduleCount(data.timeline);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: 0,\n                width: ((et - st) * setting.widthTimeX),\n                height: $element.find('.sc_main .timeline').eq(data.timeline).height()\n            });\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            $element.find('.sc_main .timeline').eq(data.timeline).append($bar);\n        };\n        /**\n         * スケジュール追加\n         *\n         * @param data\n         * @returns {number}\n         */\n        this.addScheduleData = function (data) {\n            var st = Math.ceil((data.start - tableStartTime) / setting.widthTime);\n            var et = Math.floor((data.end - tableStartTime) / setting.widthTime);\n            var $bar = jQuery('<div class=\"sc_bar\"><span class=\"head\"><span class=\"time\"></span></span><span class=\"text\"></span></div>');\n            var stext = element.formatTime(data.start);\n            var etext = element.formatTime(data.end);\n            var snum = element.getScheduleCount(data.timeline);\n            $bar.css({\n                left: (st * setting.widthTimeX),\n                top: ((snum * setting.timeLineY) + setting.timeLinePaddingTop),\n                width: ((et - st) * setting.widthTimeX),\n                height: (setting.timeLineY)\n            });\n            $bar.find('.time').text(stext + '-' + etext);\n            if (data.text) {\n                $bar.find('.text').text(data.text);\n            }\n            if (data.class) {\n                $bar.addClass(data.class);\n            }\n            // $element.find('.sc_main').append($bar);\n            $element.find('.sc_main .timeline').eq(data.timeline).append($bar);\n            // データの追加\n            scheduleData.push(data);\n            // key\n            var key = scheduleData.length - 1;\n            $bar.data('sc_key', key);\n\n            $bar.bind('mouseup', function () {\n                // コールバックがセットされていたら呼出\n                if (setting.click) {\n                    if (jQuery(this).data('dragCheck') !== true && jQuery(this).data('resizeCheck') !== true) {\n                        var node = jQuery(this);\n                        var sc_key = node.data('sc_key');\n                        setting.click(node, scheduleData[sc_key]);\n                    }\n                }\n            });\n\n            var $node = $element.find('.sc_bar');\n            // move node.\n            $node.draggable({\n                grid: [setting.widthTimeX, 1],\n                containment: '.sc_main',\n                helper: 'original',\n                start: function (event, ui) {\n                    var node = {};\n                    node.node = this;\n                    node.offsetTop = ui.position.top;\n                    node.offsetLeft = ui.position.left;\n                    node.currentTop = ui.position.top;\n                    node.currentLeft = ui.position.left;\n                    node.timeline = element.getTimeLineNumber(ui.position.top);\n                    node.nowTimeline = node.timeline;\n                    currentNode = node;\n                },\n                drag: function (event, ui) {\n                    jQuery(this).data('dragCheck', true);\n                    if (!currentNode) {\n                        return false;\n                    }\n                    var $moveNode = jQuery(this);\n                    var sc_key = $moveNode.data('sc_key');\n                    var originalTop = ui.originalPosition.top;\n                    var originalLeft = ui.originalPosition.left;\n                    var positionTop = ui.position.top;\n                    var positionLeft = ui.position.left;\n                    var timelineNum = element.getTimeLineNumber(ui.position.top);\n                    // 位置の修正\n                    // ui.position.top = Math.floor(ui.position.top / setting.timeLineY) * setting.timeLineY;\n                    // ui.position.top = element.getScheduleCount(timelineNum) * setting.timeLineY;\n                    ui.position.left = Math.floor(ui.position.left / setting.widthTimeX) * setting.widthTimeX;\n\n\n                    // $moveNode.find(\".text\").text(timelineNum+\" \"+(element.getScheduleCount(timelineNum) + 1));\n                    if (currentNode.nowTimeline !== timelineNum) {\n                        // 高さの調節\n                        // element.resizeRow(currentNode[\"nowTimeline\"],element.getScheduleCount(currentNode[\"nowTimeline\"]));\n                        // element.resizeRow(timelineNum,element.getScheduleCount(timelineNum) + 1);\n                        // 現在のタイムライン\n                        currentNode.nowTimeline = timelineNum;\n                    } else {\n                        // ui.position.top = currentNode[\"currentTop\"];\n                    }\n                    currentNode.currentTop = ui.position.top;\n                    currentNode.currentLeft = ui.position.left;\n                    // テキスト変更\n                    element.rewriteBarText($moveNode, scheduleData[sc_key]);\n                    return true;\n                },\n                // 要素の移動が終った後の処理\n                stop: function (event, ui) {\n                    jQuery(this).data('dragCheck', false);\n                    currentNode = null;\n\n                    var node = jQuery(this);\n                    var sc_key = node.data('sc_key');\n                    var x = node.position().left;\n                    var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[sc_key].end - scheduleData[sc_key].start));\n\n                    scheduleData[sc_key].start = start;\n                    scheduleData[sc_key].end = end;\n                    // コールバックがセットされていたら呼出\n                    if (setting.change) {\n                        setting.change(node, scheduleData[sc_key]);\n                    }\n                }\n            });\n            $node.resizable({\n                handles: 'e',\n                grid: [setting.widthTimeX, setting.timeLineY],\n                minWidth: setting.widthTimeX,\n                start: function (event, ui) {\n                    var node = jQuery(this);\n                    node.data('resizeCheck', true);\n                },\n                // 要素の移動が終った後の処理\n                stop: function (event, ui) {\n                    var node = jQuery(this);\n                    var sc_key = node.data('sc_key');\n                    var x = node.position().left;\n                    var w = node.width();\n                    var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n                    var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n                    var timelineNum = scheduleData[sc_key].timeline;\n\n                    scheduleData[sc_key].start = start;\n                    scheduleData[sc_key].end = end;\n\n                    // 高さ調整\n                    element.resetBarPosition(timelineNum);\n                    // テキスト変更\n                    element.rewriteBarText(node, scheduleData[sc_key]);\n\n                    node.data('resizeCheck', false);\n                    // コールバックがセットされていたら呼出\n                    if (setting.change) {\n                        setting.change(node, scheduleData[sc_key]);\n                    }\n                }\n            });\n            return key;\n        };\n        /**\n         * スケジュール数の取得\n         *\n         * @param {number} n row number\n         * @returns {number}\n         */\n        this.getScheduleCount = function (n) {\n            var num = 0;\n            for (var i in scheduleData) {\n                if (scheduleData[i].timeline === n) {\n                    num ++;\n                }\n            }\n            return num;\n        };\n        /**\n         * add rows\n         *\n         * @param timeline\n         * @param row\n         */\n        this.addRow = function (timeline, row) {\n            var title = row.title;\n            var id = $element.find('.sc_main .timeline').length;\n\n            var html;\n\n            html = '';\n            html += '<div class=\"timeline\"><span>' + title + '</span></div>';\n            var $data = jQuery(html);\n            // event call\n            if (setting.init_data) {\n                setting.init_data($data, row);\n            }\n            $element.find('.sc_data_scroll').append($data);\n\n            html = '';\n            html += '<div class=\"timeline\"></div>';\n            var $timeline = jQuery(html);\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                var $tl = jQuery('<div class=\"tl\"></div>');\n                $tl.width(setting.widthTimeX - setting.timeBorder);\n\n                $tl.data('time', element.formatTime(t));\n                $tl.data('timeline', timeline);\n                $timeline.append($tl);\n            }\n            // クリックイベント\n            // left click\n            $timeline.find('.tl').click(function () {\n                element.moveSchedules(jQuery(this).data('timeline'), jQuery(this), setting.bundleMoveWidth);\n                if (setting.time_click) {\n                    setting.time_click(this, jQuery(this).data('time'), jQuery(this).data('timeline'), timelineData[jQuery(this).data('timeline')]);\n                }\n            });\n            // right click\n            $timeline.find('.tl').on('contextmenu', function (e) {\n                element.moveSchedules(jQuery(this).data('timeline'), jQuery(this), -1 * setting.bundleMoveWidth);\n                if (setting.time_click) {\n                    setting.time_click(this, jQuery(this).data('time'), jQuery(this).data('timeline'), timelineData[jQuery(this).data('timeline')]);\n                }\n                return false;\n            });\n\n            $element.find('.sc_main').append($timeline);\n\n            timelineData[timeline] = row;\n\n            if (row.class && (row.class != '')) {\n                $element.find('.sc_data .timeline').eq(id).addClass(row.class);\n                $element.find('.sc_main .timeline').eq(id).addClass(row.class);\n            }\n            // スケジュールタイムライン\n            if (row.schedule) {\n                for (var i in row.schedule) {\n                    var bdata = row.schedule[i];\n                    var s = element.calcStringTime(bdata.start);\n                    var e = element.calcStringTime(bdata.end);\n\n                    var data = {};\n                    data.timeline = id;\n                    data.start = s;\n                    data.end = e;\n                    if (bdata.text) {\n                        data.text = bdata.text;\n                    }\n                    data.data = {};\n                    if (bdata.data) {\n                        data.data = bdata.data;\n                    }\n                    element.addScheduleData(data);\n                }\n            }\n            // 高さの調整\n            element.resetBarPosition(id);\n            $element.find('.sc_main .timeline').eq(id).droppable({\n                accept: '.sc_bar',\n                drop: function (ev, ui) {\n                    var node = ui.draggable;\n                    var sc_key = node.data('sc_key');\n                    var nowTimelineNum = scheduleData[sc_key].timeline;\n                    var timelineNum = $element.find('.sc_main .timeline').index(this);\n                    // タイムラインの変更\n                    scheduleData[sc_key].timeline = timelineNum;\n                    node.appendTo(this);\n                    // 高さ調整\n                    element.resetBarPosition(nowTimelineNum);\n                    element.resetBarPosition(timelineNum);\n                }\n            });\n            // コールバックがセットされていたら呼出\n            if (setting.append) {\n                $element.find('.sc_main .timeline').eq(id).find('.sc_bar').each(function () {\n                    var node = jQuery(this);\n                    var sc_key = node.data('sc_key');\n                    setting.append(node, scheduleData[sc_key]);\n                });\n            }\n        };\n        /**\n         *\n         * @returns {any[]}\n         */\n        this.getScheduleData = function () {\n            var data = new Array();\n\n            for (var i in timelineData) {\n                if (typeof timelineData[i] === 'undefined') continue;\n                var timeline = jQuery.extend(true, {}, timelineData[i]);\n                timeline.schedule = new Array();\n                data.push(timeline);\n            }\n\n            for (var i in scheduleData) {\n                if (typeof scheduleData[i] === 'undefined') continue;\n                var schedule = jQuery.extend(true, {}, scheduleData[i]);\n                schedule.start = this.formatTime(schedule.start);\n                schedule.end = this.formatTime(schedule.end);\n                var timelineIndex = schedule.timeline;\n                delete schedule.timeline;\n                data[timelineIndex].schedule.push(schedule);\n            }\n\n            return data;\n        };\n        /**\n         * テキストの変更\n         *\n         * @param node\n         * @param data\n         */\n        this.rewriteBarText = function (node, data) {\n            var x = node.position().left;\n            var w = node.width();\n            var start = tableStartTime + (Math.floor(x / setting.widthTimeX) * setting.widthTime);\n            // var end = tableStartTime + (Math.floor((x + w) / setting.widthTimeX) * setting.widthTime);\n            var end = start + (data.end - data.start);\n            var html = element.formatTime(start) + '-' + element.formatTime(end);\n            jQuery(node).find('.time').html(html);\n        };\n        /**\n         *\n         * @param n\n         */\n        this.resetBarPosition = function (n) {\n            // 要素の並び替え\n            var $bar_list = $element.find('.sc_main .timeline').eq(n).find('.sc_bar');\n            var codes = [];\n            for (var i = 0; i < $bar_list.length; i++) {\n                codes[i] = { code: i, x: jQuery($bar_list[i]).position().left };\n            }\n            // ソート\n            codes.sort(function (a, b) {\n                if (a.x < b.x) {\n                    return -1;\n                } if (a.x > b.x) {\n                    return 1;\n                }\n                return 0;\n            });\n            var check = [];\n            var h = 0;\n            var $e1; var $e2;\n            var c1; var c2;\n            var s1; var e1; var s2; var e2;\n            for (var i = 0; i < codes.length; i++) {\n                c1 = codes[i].code;\n                $e1 = jQuery($bar_list[c1]);\n                for (h = 0; h < check.length; h++) {\n                    var next = false;\n                    for (var j = 0; j < check[h].length; j++) {\n                        c2 = check[h][j];\n                        $e2 = jQuery($bar_list[c2]);\n\n                        s1 = $e1.position().left;\n                        e1 = $e1.position().left + $e1.width();\n                        s2 = $e2.position().left;\n                        e2 = $e2.position().left + $e2.width();\n                        if (s1 < e2 && e1 > s2) {\n                            next = true;\n                            continue;\n                        }\n                    }\n                    if (!next) {\n                        break;\n                    }\n                }\n                if (!check[h]) {\n                    check[h] = [];\n                }\n                $e1.css({ top: ((h * setting.timeLineY) + setting.timeLinePaddingTop) });\n                check[h][check[h].length] = c1;\n            }\n            // 高さの調整\n            this.resizeRow(n, check.length);\n        };\n        /**\n         *\n         * @param n\n         * @param height\n         */\n        this.resizeRow = function (n, height) {\n            // var h = Math.max(element.getScheduleCount(n),1);\n            var h = Math.max(height, 1);\n            $element.find('.sc_data .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n            $element.find('.sc_main .timeline').eq(n).height((h * setting.timeLineY) - setting.timeLineBorder + setting.timeLinePaddingTop + setting.timeLinePaddingBottom);\n\n            $element.find('.sc_main .timeline').eq(n).find('.sc_bgBar').each(function () {\n                jQuery(this).height(jQuery(this).closest('.timeline').height());\n            });\n\n            $element.find('.sc_data').height($element.find('.sc_main_box').height());\n        };\n        /**\n         * resizeWindow\n         */\n        this.resizeWindow = function () {\n            var sc_width = $element.width();\n            var sc_main_width = sc_width - setting.dataWidth - (setting.verticalScrollbar);\n            var cell_num = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            $element.find('.sc_header_cell').width(setting.dataWidth);\n            $element.find('.sc_data,.sc_data_scroll').width(setting.dataWidth);\n            $element.find('.sc_header').width(sc_main_width);\n            $element.find('.sc_main_box').width(sc_main_width);\n            $element.find('.sc_header_scroll').width(setting.widthTimeX * cell_num);\n            $element.find('.sc_main_scroll').width(setting.widthTimeX * cell_num);\n        };\n        /**\n         * move all cells of the right of the specified time line cell\n         *\n         * @param timeline\n         * @param baseTimeLineCell\n         * @param moveWidth\n         */\n        this.moveSchedules = function (timeline, baseTimeLineCell, moveWidth) {\n            var $bar_list = $element.find('.sc_main .timeline').eq(timeline).find('.sc_bar');\n            for (var i = 0; i < $bar_list.length; i++) {\n                var $bar = jQuery($bar_list[i]);\n                if (baseTimeLineCell.position().left <= $bar.position().left) {\n                    $bar.css({ left: Math.max(0, Math.min($bar.position().left + setting.widthTimeX * moveWidth, Math.floor((tableEndTime - tableStartTime) / setting.widthTime) * setting.widthTimeX - $bar.width())) });\n\n                    var sc_key = $bar.data('sc_key');\n                    var start = tableStartTime + (Math.floor($bar.position().left / setting.widthTimeX) * setting.widthTime);\n                    var end = start + ((scheduleData[sc_key].end - scheduleData[sc_key].start));\n                    scheduleData[sc_key].start = start;\n                    scheduleData[sc_key].end = end;\n                    element.rewriteBarText($bar, scheduleData[sc_key]);\n\n                    // if setting\n                    if (setting.change) {\n                        setting.change($bar, scheduleData[sc_key]);\n                    }\n                }\n            }\n            element.resetBarPosition(timeline);\n        };\n        /**\n         * initialize\n         */\n        this.init = function () {\n            tableStartTime = element.calcStringTime(setting.startTime);\n            tableEndTime = element.calcStringTime(setting.endTime);\n            tableStartTime -= (tableStartTime % setting.widthTime);\n            tableEndTime -= (tableEndTime % setting.widthTime);\n\n            var html = '';\n            html += '<div class=\"sc_menu\">' + '\\n';\n            html += '<div class=\"sc_header_cell\"><span>&nbsp;</span></div>' + '\\n';\n            html += '<div class=\"sc_header\">' + '\\n';\n            html += '<div class=\"sc_header_scroll\">' + '\\n';\n            html += '</div>' + '\\n';\n            html += '</div>' + '\\n';\n            html += '<br class=\"clear\" />' + '\\n';\n            html += '</div>' + '\\n';\n            html += '<div class=\"sc_wrapper\">' + '\\n';\n            html += '<div class=\"sc_data\">' + '\\n';\n            html += '<div class=\"sc_data_scroll\">' + '\\n';\n            html += '</div>' + '\\n';\n            html += '</div>' + '\\n';\n            html += '<div class=\"sc_main_box\">' + '\\n';\n            html += '<div class=\"sc_main_scroll\">' + '\\n';\n            html += '<div class=\"sc_main\">' + '\\n';\n            html += '</div>' + '\\n';\n            html += '</div>' + '\\n';\n            html += '</div>' + '\\n';\n            html += '<br class=\"clear\" />' + '\\n';\n            html += '</div>' + '\\n';\n\n            $element.append(html);\n            $element.addClass(setting.className);\n\n            $element.find('.sc_main_box').scroll(function () {\n                $element.find('.sc_data_scroll').css('top', $(this).scrollTop() * -1);\n                $element.find('.sc_header_scroll').css('left', $(this).scrollLeft() * -1);\n            });\n            // add time cell\n            // var cellNum = Math.floor((tableEndTime - tableStartTime) / setting.widthTime);\n            var beforeTime = -1;\n            for (var t = tableStartTime; t < tableEndTime; t += setting.widthTime) {\n                if (\n                    (beforeTime < 0)\n                    || (Math.floor(beforeTime / 3600) !== Math.floor(t / 3600))) {\n                    var html = '';\n                    html += '<div class=\"sc_time\">' + element.formatTime(t) + '</div>';\n                    var $time = jQuery(html);\n                    var cellNum = Math.floor(Number(Math.min((Math.ceil((t + setting.widthTime) / 3600) * 3600), tableEndTime) - t) / setting.widthTime);\n                    $time.width((cellNum * setting.widthTimeX) - setting.headTimeBorder);\n                    $element.find('.sc_header_scroll').append($time);\n\n                    beforeTime = t;\n                }\n            }\n\n            jQuery(window).resize(function () {\n                element.resizeWindow();\n            }).trigger('resize');\n\n            // addrow\n            for (var i in setting.rows) {\n                this.addRow(i, setting.rows[i]);\n            }\n        };\n        // 初期化\n        this.init();\n\n        this.debug = function () {\n            var html = '';\n            for (var i in scheduleData) {\n                html += '<div>';\n\n                html += i + ' : ';\n                var d = scheduleData[i];\n                for (var n in d) {\n                    var dd = d[n];\n                    html += n + ' ' + dd;\n                }\n\n                html += '</div>';\n            }\n            jQuery(setting.debug).html(html);\n        };\n        if (setting.debug && setting.debug !== '') {\n            setInterval(function () {\n                element.debug();\n            }, 10);\n        }\n        return this;\n    };\n}(jQuery));\n"]}